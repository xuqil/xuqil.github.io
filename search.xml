<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>作用域插槽</title>
      <link href="/blog/2020-02-23-scope-slots.html"/>
      <url>/blog/2020-02-23-scope-slots.html</url>
      
        <content type="html"><![CDATA[<p>有时让插槽内容能够访问子组件中才有的数据是很有用的。例如，设想一个带有如下模板的<code>&lt;current-user&gt;</code> 组件</p><h1 id="作用域插槽"><a href="#作用域插槽" class="headerlink" title="作用域插槽"></a>作用域插槽</h1><p>原来插槽的使用，在页面上显示的是<code>lastName</code>“子龙”：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">current-user</span>&gt;</span><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span> <span class="comment">&lt;!--现在在页面上显示的是"子龙"--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"cpn"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">slot</span>&gt;</span>&#123;&#123; user.lastName &#125;&#125;<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">            el: <span class="string">"#app"</span>,</span></span><br><span class="line">            components: &#123;</span><br><span class="line"><span class="actionscript">                <span class="string">"current-user"</span>: &#123;</span></span><br><span class="line"><span class="actionscript">                    template: <span class="string">"#cpn"</span>,</span></span><br><span class="line">                    data()&#123;</span><br><span class="line"><span class="actionscript">                        <span class="keyword">return</span> &#123;</span></span><br><span class="line">                            user: &#123;</span><br><span class="line"><span class="actionscript">                                firstName: <span class="string">"赵"</span>,</span></span><br><span class="line"><span class="actionscript">                                lastName: <span class="string">"子龙"</span></span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p><strong>在使用根组件中子组件时获取子组件的数据，以另一种方式显示</strong></p><p>有时让插槽内容能够访问子组件中才有的数据是很有用的。例如，设想一个带有如下模板的 <code>current-user</code> 组件：</p><p><strong>现在在页面上显示的是<code>lastname</code>“子龙”</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span>&gt;</span>&#123;&#123; user.lastName &#125;&#125;<span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们可能想换掉备用内容，用名而非姓来显示。如下：</p><p><strong>我们想把页面上显示的是<code>firstName</code>“赵”，但又不改变组件内容</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">current-user</span>&gt;</span></span><br><span class="line">  &#123;&#123; user.firstName &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然而上述代码不会正常工作，因为只有  组件可以访问到 <code>user</code> 而我们提供的内容是在父级渲染的。</p><h4 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h4><p>为了让 <code>user</code> 在父级的插槽内容中可用，我们可以将 <code>user</code> 作为 <code>slot</code> 元素的一个 attribute 绑定上去</p><p>将子组件<code>current-user</code>的模板更改为：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">slot</span> <span class="attr">v-bind:user</span>=<span class="string">"user"</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!--将该组件的user数据绑定在user变量中传给父组件使用--&gt;</span></span><br><span class="line">        &#123;&#123; user.lastName &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>绑定在 元素上的 <code>attribute</code> 被称为<strong>插槽 prop</strong>。现在在父级作用域中，我们可以使用带值的 <code>v-slot</code> 来定义我们提供的插槽 prop 的名字：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">current-user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:default</span>=<span class="string">"slotProps"</span>&gt;</span> </span><br><span class="line">        <span class="comment">&lt;!--随便定义一个变量slotProps来接收子组件传过来的数据--&gt;</span></span><br><span class="line">        &#123;&#123; slotProps.user.firstName &#125;&#125; </span><br><span class="line">        <span class="comment">&lt;!--通过slotProps获取传过来的user变量(保存了子组件的数据user)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这个例子中，我们选择将包含所有插槽 prop 的对象命名为 <code>slotProps</code>，但你也可以使用任意你喜欢的名字。</p><h2 id="独占默认插槽的缩写语法"><a href="#独占默认插槽的缩写语法" class="headerlink" title="独占默认插槽的缩写语法"></a>独占默认插槽的缩写语法</h2><p>在上述情况下，当被提供的内容<em>只有</em>默认插槽时，组件的标签才可以被当作插槽的模板来使用。这样我们就可以把 <code>v-slot</code> 直接用在组件上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">current-user</span> <span class="attr">v-slot:default</span>=<span class="string">"slotProps"</span>&gt;</span></span><br><span class="line">  &#123;&#123; slotProps.user.firstName &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这种写法还可以更简单。就像假定未指明的内容对应默认插槽一样，不带参数的 <code>v-slot</code> 被假定对应<strong>默认插槽</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">current-user</span> <span class="attr">v-slot</span>=<span class="string">"slotProps"</span>&gt;</span></span><br><span class="line">  &#123;&#123; slotProps.user.firstName &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意默认插槽的缩写语法<strong>不能</strong>和具名插槽混用，因为它会导致作用域不明确：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 无效，会导致警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">current-user</span> <span class="attr">v-slot</span>=<span class="string">"slotProps"</span>&gt;</span></span><br><span class="line">  &#123;&#123; slotProps.user.firstName &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:other</span>=<span class="string">"otherSlotProps"</span>&gt;</span></span><br><span class="line">    slotProps is NOT available here</span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>只要出现多个插槽，<strong>请始终为所有的插槽使用完整的基于 <code>&lt;template&gt;</code> 的语法</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">current-user</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:default</span>=<span class="string">"slotProps"</span>&gt;</span></span><br><span class="line">    &#123;&#123; slotProps.user.firstName &#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-slot:other</span>=<span class="string">"otherSlotProps"</span>&gt;</span></span><br><span class="line">    ...</span><br><span class="line">  <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="解构插槽-Prop"><a href="#解构插槽-Prop" class="headerlink" title="解构插槽 Prop"></a>解构插槽 Prop</h2><p>作用域插槽的内部工作原理是将你的插槽内容包括在一个传入单个参数的函数里：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> (<span class="params">slotProps</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 插槽内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这意味着 <code>v-slot</code> 的值实际上可以是任何能够作为函数定义中的参数的 JavaScript 表达式。所以在支持的环境下 (<a href="https://cn.vuejs.org/v2/guide/single-file-components.html" target="_blank" rel="noopener">单文件组件</a>或<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#浏览器兼容" target="_blank" rel="noopener">现代浏览器</a>)，你也可以使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#解构对象" target="_blank" rel="noopener">ES2015 解构</a>来传入具体的插槽 prop，如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">current-user</span> <span class="attr">v-slot</span>=<span class="string">"&#123; user &#125;"</span>&gt;</span></span><br><span class="line">  &#123;&#123; user.firstName &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这样可以使模板更简洁，尤其是在该插槽提供了多个 prop 的时候。它同样开启了 prop 重命名等其它可能，例如将 <code>user</code> 重命名为 <code>person</code>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">current-user</span> <span class="attr">v-slot</span>=<span class="string">"&#123; user: person &#125;"</span>&gt;</span></span><br><span class="line">  &#123;&#123; person.firstName &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你甚至可以定义后备内容，用于插槽 prop 是 undefined 的情形：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">current-user</span> <span class="attr">v-slot</span>=<span class="string">"&#123; user = &#123; firstName: 'Guest' &#125; &#125;"</span>&gt;</span></span><br><span class="line">  &#123;&#123; user.firstName &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">current-user</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插槽 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django REST framework:Parsers</title>
      <link href="/blog/2020-01-16-Parsers.html"/>
      <url>/blog/2020-01-16-Parsers.html</url>
      
        <content type="html"><![CDATA[<p>机器交互Web服务倾向于使用比表单编码更多的结构化格式来发送数据，因为它们发送的数据比简单表单还要复杂。</p><a id="more"></a><h1 id="解析器-Parsers"><a href="#解析器-Parsers" class="headerlink" title="解析器(Parsers)"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#parsers" target="_blank" rel="noopener">解析器(Parsers)</a></h1><blockquote><p>机器交互Web服务倾向于使用比表单编码更多的结构化格式来发送数据，因为它们发送的数据比简单表单还要复杂。</p><p>— <a href="https://groups.google.com/d/topic/django-developers/dxI4qVzrBY4/discussion" target="_blank" rel="noopener">Django开发人员小组</a> Malcom Tredinnick</p></blockquote><p>REST框架包括许多内置的Parser类，使您可以接受各种媒体类型的请求。还支持定义自己的自定义解析器，这使您可以灵活地设计API接受的媒体类型。</p><h2 id="如何确定解析器"><a href="#如何确定解析器" class="headerlink" title="如何确定解析器"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#how-the-parser-is-determined" target="_blank" rel="noopener">如何确定解析器</a></h2><p>视图的有效解析器集始终定义为类列表。当 <code>request.data</code>被访问时，REST框架将检查<code>Content-Type</code>传入请求上的标头，并确定使用哪个解析器来解析请求内容。</p><hr><p><strong>注意</strong>：开发客户端应用程序时，切记要确保<code>Content-Type</code>在HTTP请求中发送数据时设置头。</p><p>如果您未设置内容类型，则大多数客户端将默认使用<code>&#39;application/x-www-form-urlencoded&#39;</code>，这可能不是您想要的。</p><p>例如，如果要<code>json</code>使用jQuery和<a href="https://api.jquery.com/jQuery.ajax/" target="_blank" rel="noopener">.ajax（）方法</a>发送编码数据，则应确保包括该<code>contentType: &#39;application/json&#39;</code>设置。</p><hr><h2 id="设置解析器"><a href="#设置解析器" class="headerlink" title="设置解析器"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#setting-the-parsers" target="_blank" rel="noopener">设置解析器</a></h2><p>可以使用该<code>DEFAULT_PARSER_CLASSES</code>设置全局设置默认的解析器集。例如，以下设置将仅允许带有<code>JSON</code>内容的请求，而不是默认的JSON或表单数据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="string">'DEFAULT_PARSER_CLASSES'</span>: [</span><br><span class="line">        <span class="string">'rest_framework.parsers.JSONParser'</span>,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>您还可以使用<code>APIView</code>基于类的视图来设置用于单个视图或视图集的解析器。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.parsers <span class="keyword">import</span> JSONParser</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ExampleView</span><span class="params">(APIView)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A view that can accept POST requests with JSON content.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    parser_classes = [JSONParser]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">post</span><span class="params">(self, request, format=None)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">'received data'</span>: request.data&#125;)</span><br></pre></td></tr></table></figure><p>或者，如果您将<code>@api_view</code>装饰器与基于函数的视图一起使用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> api_view</span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> parser_classes</span><br><span class="line"><span class="keyword">from</span> rest_framework.parsers <span class="keyword">import</span> JSONParser</span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view(['POST'])</span></span><br><span class="line"><span class="meta">@parser_classes([JSONParser])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">example_view</span><span class="params">(request, format=None)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A view that can accept POST requests with JSON content.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">return</span> Response(&#123;<span class="string">'received data'</span>: request.data&#125;)</span><br></pre></td></tr></table></figure><hr><h1 id="API参考"><a href="#API参考" class="headerlink" title="API参考"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#api-reference" target="_blank" rel="noopener">API参考</a></h1><h2 id="JSONParser"><a href="#JSONParser" class="headerlink" title="JSONParser"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#jsonparser" target="_blank" rel="noopener">JSONParser</a></h2><p>解析<code>JSON</code>请求内容。</p><p><strong>.media_type</strong>：<code>application/json</code></p><h2 id="FormParser"><a href="#FormParser" class="headerlink" title="FormParser"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#formparser" target="_blank" rel="noopener">FormParser</a></h2><p>解析HTML表单内容。 <code>request.data</code>将填充<code>QueryDict</code>的数据。</p><p>您通常希望同时使用<code>FormParser</code>和两者，<code>MultiPartParser</code>以便完全支持HTML表单数据。</p><p><strong>.media_type</strong>：<code>application/x-www-form-urlencoded</code></p><h2 id="MultiPartParser"><a href="#MultiPartParser" class="headerlink" title="MultiPartParser"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#multipartparser" target="_blank" rel="noopener">MultiPartParser</a></h2><p>解析多部分HTML表单内容，支持文件上传。两者都<code>request.data</code>将填充<code>QueryDict</code>。</p><p>您通常希望同时使用<code>FormParser</code>和两者，<code>MultiPartParser</code>以便完全支持HTML表单数据。</p><p><strong>.media_type</strong>：<code>multipart/form-data</code></p><h2 id="FileUploadParser"><a href="#FileUploadParser" class="headerlink" title="FileUploadParser"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#fileuploadparser" target="_blank" rel="noopener">FileUploadParser</a></h2><p>解析原始文件上传内容。该<code>request.data</code>属性将是一个字典，<code>&#39;file&#39;</code>其中包含包含上载文件的单个键。</p><p>如果通过URL关键字参数<code>FileUploadParser</code>调用与with一起使用的视图<code>filename</code>，则该参数将用作文件名。</p><p>如果在没有<code>filename</code>URL关键字参数的情况下调用它，则客户端必须在<code>Content-Disposition</code>HTTP标头中设置文件名。例如<code>Content-Disposition: attachment; filename=upload.jpg</code>。</p><p><strong>.media_type</strong>：<code>*/*</code></p><h5 id="笔记："><a href="#笔记：" class="headerlink" title="笔记："></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#notes" target="_blank" rel="noopener">笔记：</a></h5><ul><li>的<code>FileUploadParser</code>是与本地客户端的使用，可以将文件上传的原始数据请求。对于基于Web的上载，或者对于具有分段上载支持的本机客户端，应使用<code>MultiPartParser</code>代替。</li><li>由于此解析器<code>media_type</code>匹配任何内容类型，<code>FileUploadParser</code>因此通常应该是API视图上设置的唯一解析器。</li><li><code>FileUploadParser</code>遵守Django的标准<code>FILE_UPLOAD_HANDLERS</code>设置和<code>request.upload_handlers</code>属性。有关更多详细信息，请参见<a href="https://docs.djangoproject.com/en/stable/topics/http/file-uploads/#upload-handlers" target="_blank" rel="noopener">Django文档</a>。</li></ul><h5 id="基本用法示例："><a href="#基本用法示例：" class="headerlink" title="基本用法示例："></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#basic-usage-example" target="_blank" rel="noopener">基本用法示例：</a></h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># views.py</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileUploadView</span><span class="params">(views.APIView)</span>:</span></span><br><span class="line">    parser_classes = [FileUploadParser]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">put</span><span class="params">(self, request, filename, format=None)</span>:</span></span><br><span class="line">        file_obj = request.data[<span class="string">'file'</span>]</span><br><span class="line">        <span class="comment"># ...</span></span><br><span class="line">        <span class="comment"># do some stuff with uploaded file</span></span><br><span class="line">        <span class="comment"># ...</span></span><br><span class="line">        <span class="keyword">return</span> Response(status=<span class="number">204</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># urls.py</span></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># ...</span></span><br><span class="line">    url(<span class="string">r'^upload/(?P&lt;filename&gt;[^/]+)$'</span>, FileUploadView.as_view())</span><br><span class="line">]</span><br></pre></td></tr></table></figure><hr><h1 id="自定义解析器"><a href="#自定义解析器" class="headerlink" title="自定义解析器"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#custom-parsers" target="_blank" rel="noopener">自定义解析器</a></h1><p>要实现自定义解析器，应重写<code>BaseParser</code>，设置<code>.media_type</code>属性并实现<code>.parse(self, stream, media_type, parser_context)</code>方法。</p><p>该方法应返回将用于填充<code>request.data</code>属性的数据。</p><p>传递给的参数<code>.parse()</code>是：</p><h3 id="stream"><a href="#stream" class="headerlink" title="stream"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#stream" target="_blank" rel="noopener">stream</a></h3><p>类似于流的对象，表示请求的主体。</p><h3 id="media-type"><a href="#media-type" class="headerlink" title="media_type"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#media_type" target="_blank" rel="noopener">media_type</a></h3><p>可选的。如果提供，这是传入请求内容的媒体类型。</p><p>根据请求的<code>Content-Type:</code>header，它可能比渲染器的<code>media_type</code>属性更具体，并且可能包括媒体类型参数。例如<code>&quot;text/plain; charset=utf-8&quot;</code>。</p><h3 id="parser-context"><a href="#parser-context" class="headerlink" title="parser_context"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#parser_context" target="_blank" rel="noopener">parser_context</a></h3><p>可选的。如果提供，则此参数将是一个字典，其中包含解析请求内容可能需要的任何其他上下文。</p><p>默认情况下，这将包括以下键：<code>view</code>，<code>request</code>，<code>args</code>，<code>kwargs</code>。</p><h2 id="例"><a href="#例" class="headerlink" title="例"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#example" target="_blank" rel="noopener">例</a></h2><p>下面是一个示例纯文本解析器，它将<code>request.data</code>使用代表请求主体的字符串填充属性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PlainTextParser</span><span class="params">(BaseParser)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Plain text parser.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    media_type = <span class="string">'text/plain'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, stream, media_type=None, parser_context=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Simply return a string representing the body of the request.</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        <span class="keyword">return</span> stream.read()</span><br></pre></td></tr></table></figure><hr><h1 id="第三方软件包"><a href="#第三方软件包" class="headerlink" title="第三方软件包"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#third-party-packages" target="_blank" rel="noopener">第三方软件包</a></h1><p>以下第三方软件包也可用。</p><h2 id="YAML"><a href="#YAML" class="headerlink" title="YAML"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#yaml" target="_blank" rel="noopener">YAML</a></h2><p><a href="https://jpadilla.github.io/django-rest-framework-yaml/" target="_blank" rel="noopener">REST框架YAML</a>提供了<a href="http://www.yaml.org/" target="_blank" rel="noopener">YAML</a>解析和渲染支持。它以前直接包含在REST框架程序包中，现在已作为第三方程序包受支持。</p><h4 id="安装与配置"><a href="#安装与配置" class="headerlink" title="安装与配置"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#installation-configuration" target="_blank" rel="noopener">安装与配置</a></h4><p>使用pip安装。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install djangorestframework-yaml</span><br></pre></td></tr></table></figure><p>修改您的REST框架设置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="string">'DEFAULT_PARSER_CLASSES'</span>: [</span><br><span class="line">        <span class="string">'rest_framework_yaml.parsers.YAMLParser'</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">'DEFAULT_RENDERER_CLASSES'</span>: [</span><br><span class="line">        <span class="string">'rest_framework_yaml.renderers.YAMLRenderer'</span>,</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="XML格式"><a href="#XML格式" class="headerlink" title="XML格式"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#xml" target="_blank" rel="noopener">XML格式</a></h2><p><a href="https://jpadilla.github.io/django-rest-framework-xml/" target="_blank" rel="noopener">REST Framework XML</a>提供了一种简单的非正式XML格式。它以前直接包含在REST框架程序包中，现在已作为第三方程序包受支持。</p><h4 id="安装与配置-1"><a href="#安装与配置-1" class="headerlink" title="安装与配置"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#installation-configuration_1" target="_blank" rel="noopener">安装与配置</a></h4><p>使用pip安装。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install djangorestframework-xml</span><br></pre></td></tr></table></figure><p>修改您的REST框架设置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">REST_FRAMEWORK = &#123;</span><br><span class="line">    <span class="string">'DEFAULT_PARSER_CLASSES'</span>: [</span><br><span class="line">        <span class="string">'rest_framework_xml.parsers.XMLParser'</span>,</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">'DEFAULT_RENDERER_CLASSES'</span>: [</span><br><span class="line">        <span class="string">'rest_framework_xml.renderers.XMLRenderer'</span>,</span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="消息包"><a href="#消息包" class="headerlink" title="消息包"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#messagepack" target="_blank" rel="noopener">消息包</a></h2><p><a href="https://github.com/juanriaza/django-rest-framework-msgpack" target="_blank" rel="noopener">MessagePack</a>是一种快速，高效的二进制序列化格式。 <a href="https://github.com/juanriaza" target="_blank" rel="noopener">Juan Riaza</a>维护<a href="https://github.com/juanriaza/django-rest-framework-msgpack" target="_blank" rel="noopener">djangorestframework-msgpack</a>软件包，该软件包为REST框架提供MessagePack渲染器和解析器支持。</p><h2 id="CamelCase-JSON"><a href="#CamelCase-JSON" class="headerlink" title="CamelCase JSON"></a><a href="https://www.django-rest-framework.org/api-guide/parsers/#camelcase-json" target="_blank" rel="noopener">CamelCase JSON</a></h2><p><a href="https://github.com/vbabiy/djangorestframework-camel-case" target="_blank" rel="noopener">djangorestframework-camel-case</a>提供REST框架<a href="https://github.com/vbabiy/djangorestframework-camel-case" target="_blank" rel="noopener">的驼峰式</a> JSON渲染器和解析器。这允许序列化程序使用Python样式的带下划线的字段名称，但在API中以Javascript样式的驼峰式大小写字段名称公开。它由<a href="https://github.com/vbabiy" target="_blank" rel="noopener">Vitaly Babiy</a>维护。</p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
          <category> Django-Rest-framework </category>
          
      </categories>
      
      
        <tags>
            
            <tag> restful </tag>
            
            <tag> Django </tag>
            
            <tag> Django-Rest-framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django REST framework:Routers</title>
      <link href="/blog/2020-01-15-Routers.html"/>
      <url>/blog/2020-01-15-Routers.html</url>
      
        <content type="html"><![CDATA[<p>资源路由允许您快速声明给定资源控制器的所有通用路由。无需为索引声明单独的路由，而是在单行代码中声明资源丰富的路由。</p><a id="more"></a><h1 id="Routers"><a href="#Routers" class="headerlink" title="Routers"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#routers" target="_blank" rel="noopener">Routers</a></h1><blockquote><p>资源路由允许您快速声明给定资源控制器的所有通用路由。无需为索引声明单独的路由，而是在单行代码中声明资源丰富的路由。</p><p>— <a href="https://guides.rubyonrails.org/routing.html" target="_blank" rel="noopener">Ruby on Rails文档</a></p></blockquote><p>一些Web框架（例如Rails）提供了自动确定应用程序的URL应如何映射到处理传入请求的逻辑的功能。</p><p>REST框架增加了对将自动URL路由到Django的支持，并为您提供了一种简单，快速且一致的方式将视图逻辑连接到一组URL。</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#usage" target="_blank" rel="noopener">用法</a></h2><p>这是一个使用的简单URL conf的示例<code>SimpleRouter</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> routers</span><br><span class="line"></span><br><span class="line">router = routers.SimpleRouter()</span><br><span class="line">router.register(<span class="string">r'users'</span>, UserViewSet)</span><br><span class="line">router.register(<span class="string">r'accounts'</span>, AccountViewSet)</span><br><span class="line">urlpatterns = router.urls</span><br></pre></td></tr></table></figure><p>该方法有两个强制性参数<code>register()</code>：</p><ul><li><code>prefix</code> -用于这组路由的URL前缀。</li><li><code>viewset</code> -视图集类。</li></ul><p>（可选）您还可以指定其他参数：</p><ul><li><code>basename</code>-用于创建的URL名称的基础。如果未设置，则基名称将基于<code>queryset</code>视图集的属性自动生成（如果有）。请注意，如果视图集不包含<code>queryset</code>属性，则必须<code>basename</code>在注册视图集时进行设置。</li></ul><p>上面的示例将生成以下URL模式：</p><ul><li>网址格式：<code>^users/$</code> 名称：<code>&#39;user-list&#39;</code></li><li>网址格式：<code>^users/{pk}/$</code> 名称：<code>&#39;user-detail&#39;</code></li><li>网址格式：<code>^accounts/$</code> 名称：<code>&#39;account-list&#39;</code></li><li>网址格式：<code>^accounts/{pk}/$</code> 名称：<code>&#39;account-detail&#39;</code></li></ul><hr><p><strong>注意</strong>：该<code>basename</code>参数用于指定视图名称模式的初始部分。在上面的示例中，这就是“ <code>user</code>或” <code>account</code>部分。</p><p>通常，您<em>不需要</em>指定<code>basename</code>参数，但是如果您有一个定义了自定义<code>get_queryset</code>方法的视图<code>.queryset</code>集，则该视图集可能没有属性集。如果尝试注册该视图集，则会看到类似以下错误：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'basename'</span> argument <span class="keyword">not</span> specified, <span class="keyword">and</span> could <span class="keyword">not</span> automatically determine the name <span class="keyword">from</span> the viewset, <span class="keyword">as</span> it does <span class="keyword">not</span> have a <span class="string">'.queryset'</span> attribute.</span><br></pre></td></tr></table></figure><p>这意味着<code>basename</code>注册视图集时需要显式设置参数，因为无法从模型名称自动确定该参数。</p><hr><h3 id="include与路由器一起使用"><a href="#include与路由器一起使用" class="headerlink" title="include与路由器一起使用"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#using-include-with-routers" target="_blank" rel="noopener"><code>include</code>与路由器一起使用</a></h3><p><code>.urls</code>路由器实例上的属性只是URL模式的标准列表。关于如何包含这些URL，有很多不同的样式。</p><p>例如，您可以追加<code>router.urls</code>到现有视图的列表中…</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">router = routers.SimpleRouter()</span><br><span class="line">router.register(<span class="string">r'users'</span>, UserViewSet)</span><br><span class="line">router.register(<span class="string">r'accounts'</span>, AccountViewSet)</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^forgot-password/$'</span>, ForgotPasswordFormView.as_view()),</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">urlpatterns += router.urls</span><br></pre></td></tr></table></figure><p>另外，您也可以使用Django的<code>include</code>功能，例如…</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^forgot-password/$'</span>, ForgotPasswordFormView.as_view()),</span><br><span class="line">    url(<span class="string">r'^'</span>, include(router.urls)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>您可以使用<code>include</code>应用程序名称空间：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^forgot-password/$'</span>, ForgotPasswordFormView.as_view()),</span><br><span class="line">    url(<span class="string">r'^api/'</span>, include((router.urls, <span class="string">'app_name'</span>))),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>或应用程序和实例名称空间：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">urlpatterns = [</span><br><span class="line">    url(<span class="string">r'^forgot-password/$'</span>, ForgotPasswordFormView.as_view()),</span><br><span class="line">    url(<span class="string">r'^api/'</span>, include((router.urls, <span class="string">'app_name'</span>), namespace=<span class="string">'instance_name'</span>)),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>有关更多详细信息，请参见Django的<a href="https://docs.djangoproject.com/en/3.0/topics/http/urls/" target="_blank" rel="noopener">URL名称空间文档</a>和<a href="https://docs.djangoproject.com/en/2.0/ref/urls/#include" target="_blank" rel="noopener"><code>include</code>API参考</a>。</p><hr><p><strong>注意</strong>：如果将命名空间与超链接的序列化程序一起使用，则还需要确保<code>view_name</code>序列化程序上的所有参数都能正确反映名称空间。在上面的示例中，您需要包括一个参数，例如<code>view_name=&#39;app_name:user-detail&#39;</code>超链接到用户详细信息视图的序列化程序字段的参数 。</p><p>自动<code>view_name</code>生成使用的模式<code>%(model_name)-detail</code>。除非您的模型名称实际发生冲突，否则在使用超链接序列化程序时最好<strong>不要为</strong> Django REST Framework视图命名。</p><hr><h3 id="额外操作的路由"><a href="#额外操作的路由" class="headerlink" title="额外操作的路由"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#routing-for-extra-actions" target="_blank" rel="noopener">额外操作的路由</a></h3><p>视图集可以通过用装饰器装饰方法来<a href="https://www.django-rest-framework.org/api-guide/viewsets/#marking-extra-actions-for-routing" target="_blank" rel="noopener">标记用于路由</a>的<a href="https://www.django-rest-framework.org/api-guide/viewsets/#marking-extra-actions-for-routing" target="_blank" rel="noopener">额外操作</a><code>@action</code>。这些额外的动作将包含在生成的路线中。例如，给定类的<code>set_password</code>方法<code>UserViewSet</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> myapp.permissions <span class="keyword">import</span> IsAdminOrIsSelf</span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> action</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserViewSet</span><span class="params">(ModelViewSet)</span>:</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="meta">    @action(methods=['post'], detail=True, permission_classes=[IsAdminOrIsSelf])</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_password</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">        ...</span><br></pre></td></tr></table></figure><p>将生成以下路线：</p><ul><li>网址格式： <code>^users/{pk}/set_password/$</code></li><li>网址名称： <code>&#39;user-set-password&#39;</code></li></ul><p>默认情况下，URL模式基于方法命名，URL名称是<code>ViewSet.basename</code>和连字符方法名的组合。如果您不想对这些值中的任何一个使用默认值，您可以改为向<code>@action</code> 装饰器提供<code>url_path</code>和 <code>url_name</code>参数。</p><p>例如，如果要将我们的自定义操作的URL更改为<code>^users/{pk}/change-password/$</code>，则可以编写：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> myapp.permissions <span class="keyword">import</span> IsAdminOrIsSelf</span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> action</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserViewSet</span><span class="params">(ModelViewSet)</span>:</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="meta">    @action(methods=['post'], detail=True, permission_classes=[IsAdminOrIsSelf],</span></span><br><span class="line">            url_path=<span class="string">'change-password'</span>, url_name=<span class="string">'change_password'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_password</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">        ...</span><br></pre></td></tr></table></figure><p>上面的示例现在将生成以下URL模式：</p><ul><li>网址路径： <code>^users/{pk}/change-password/$</code></li><li>网址名称： <code>&#39;user-change_password&#39;</code></li></ul><h1 id="API指南"><a href="#API指南" class="headerlink" title="API指南"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#api-guide" target="_blank" rel="noopener">API指南</a></h1><h2 id="SimpleRouter"><a href="#SimpleRouter" class="headerlink" title="SimpleRouter"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#simplerouter" target="_blank" rel="noopener">SimpleRouter</a></h2><p>该路由器包括一套标准的途径<code>list</code>，<code>create</code>，<code>retrieve</code>，<code>update</code>，<code>partial_update</code>和<code>destroy</code>行动。视图集还可以使用<code>@action</code>装饰器标记路由的其他方法。</p><table><thead><tr><th>URL Style</th><th>HTTP Method</th><th>Action</th><th>URL Name</th></tr></thead><tbody><tr><td>{prefix}/</td><td>GET</td><td>list</td><td>{basename}-list</td></tr><tr><td>POST</td><td>create</td><td></td><td></td></tr><tr><td>{prefix}/{url_path}/</td><td>GET, 或由<code>methods</code>参数指定</td><td><code>@action(detail=False)</code> decorated method</td><td>{basename}-{url_name}</td></tr><tr><td>{prefix}/{lookup}/</td><td>GET</td><td>retrieve</td><td>{basename}-detail</td></tr><tr><td>PUT</td><td>update</td><td></td><td></td></tr><tr><td>PATCH</td><td>partial_update</td><td></td><td></td></tr><tr><td>DELETE</td><td>destroy</td><td></td><td></td></tr><tr><td>{prefix}/{lookup}/{url_path}/</td><td>GET, 或由<code>methods</code>参数指定</td><td><code>@action(detail=True)</code> decorated method</td><td>{basename}-{url_name}</td></tr></tbody></table><p>默认情况下，<code>SimpleRoute</code>r创建的url会附加一个斜杠。在实例化路由器时，可以通过将尾部的斜杠参数设置为<code>False</code>来修改此行为。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">router = SimpleRouter(trailing_slash=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><p>尾部的斜杠在Django中是常规的，但在其他一些框架（例如Rails）中默认不使用。尽管有些JavaScript框架可能期望使用特定的路由样式，但是选择使用哪种样式在很大程度上取决于首选项。</p><p>路由器将匹配包含除斜杠和句点字符以外的任何字符的查找值。对于更严格（或更宽松）的查找模式，请<code>lookup_value_regex</code>在视图集上设置属性。例如，您可以将查找限制为有效的UUID：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyModelViewSet</span><span class="params">(mixins.RetrieveModelMixin, viewsets.GenericViewSet)</span>:</span></span><br><span class="line">    lookup_field = <span class="string">'my_model_id'</span></span><br><span class="line">    lookup_value_regex = <span class="string">'[0-9a-f]&#123;32&#125;'</span></span><br></pre></td></tr></table></figure><h2 id="DefaultRouter"><a href="#DefaultRouter" class="headerlink" title="DefaultRouter"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#defaultrouter" target="_blank" rel="noopener">DefaultRouter</a></h2><p>该路由器与<code>SimpleRouter</code>上面类似，但是还包括一个默认的API根视图，该根视图返回一个响应，其中包含指向所有列表视图的超链接。它还为可选<code>.json</code>样式格式后缀生成路由。</p><table><thead><tr><th>URL Style</th><th>HTTP Method</th><th>Action</th><th>URL Name</th></tr></thead><tbody><tr><td>[.format]</td><td>GET</td><td>自动生成的根视图</td><td>api-root</td></tr><tr><td>{prefix}/[.format]</td><td>GET</td><td>list</td><td>{basename}-list</td></tr><tr><td>POST</td><td>create</td><td></td><td></td></tr><tr><td>{prefix}/{url_path}/[.format]</td><td>GET, 或由“methods”参数指定</td><td><code>@action(detail=False)</code> decorated method</td><td>{basename}-{url_name}</td></tr><tr><td>{prefix}/{lookup}/[.format]</td><td>GET</td><td>retrieve</td><td>{basename}-detail</td></tr><tr><td>PUT</td><td>update</td><td></td><td></td></tr><tr><td>PATCH</td><td>partial_update</td><td></td><td></td></tr><tr><td>DELETE</td><td>destroy</td><td></td><td></td></tr><tr><td>{prefix}/{lookup}/{url_path}/[.format]</td><td>GET, 或由“methods”参数指定</td><td><code>@action(detail=True)</code> decorated method</td><td>{basename}-{url_name}</td></tr></tbody></table><p>与<code>SimpleRouter</code>一样，在实例化路由器时，可以通过将<code>trailing_slash</code>参数设置为<code>False</code>来删除URL路由上的尾部斜杠。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">router = DefaultRouter(trailing_slash=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><h1 id="自定义路由器"><a href="#自定义路由器" class="headerlink" title="自定义路由器"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#custom-routers" target="_blank" rel="noopener">自定义路由器</a></h1><p>实施定制路由器并不是您经常需要做的事情，但是如果您对API的URL的结构有特定要求，这将很有用。这样做可以使您以可重用的方式封装URL结构，从而确保您不必为每个新视图明确编写URL模式。</p><p>实现自定义路由器的最简单方法是将现有路由器类之一作为子类。该<code>.routes</code>属性用于模板化将映射到每个视图集的URL模式。该<code>.routes</code>属性是<code>Route</code>命名元组的列表。</p><p><code>Route</code>命名元组的参数为：</p><p><strong>url</strong>：一个字符串，代表要路由的URL。可能包含以下格式字符串：</p><ul><li><code>{prefix}</code> -用于这组路由的URL前缀。</li><li><code>{lookup}</code> -用于与单个实例匹配的查找字段。</li><li><code>{trailing_slash}</code>-根据<code>trailing_slash</code>参数，是’/‘还是空字符串。</li></ul><p><strong>mapping</strong>：HTTP方法名称到视图方法的映射</p><p><strong>name</strong>：<code>reverse</code>呼叫中使用的URL名称。可能包含以下格式字符串：</p><ul><li><code>{basename}</code> -用于创建的URL名称的基础。</li></ul><p><strong>initkwargs</strong>：实例化视图时应传递的所有其他参数的字典。请注意，<code>detail</code>，<code>basename</code>，和<code>suffix</code>参数保留给视图集中内省和也使用可浏览的API生成视图名称和面包屑链接。</p><h2 id="自定义动态路线"><a href="#自定义动态路线" class="headerlink" title="自定义动态路线"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#customizing-dynamic-routes" target="_blank" rel="noopener">自定义动态路线</a></h2><p>您还可以自定义<code>@action</code>装饰器的路由方式。<code>DynamicRoute</code>在<code>.routes</code>列表中包括命名的元组，将<code>detail</code>参数设置为适用于基于列表的路由和基于详细信息的路由。除了<code>detail</code>，参数为<code>DynamicRoute</code>：</p><p><strong>url</strong>：一个字符串，代表要路由的URL。可能包含与相同的格式字符串<code>Route</code>，并且另外接受<code>{url_path}</code>格式字符串。</p><p><strong>name</strong>：<code>reverse</code>呼叫中使用的URL名称。可能包含以下格式字符串：</p><ul><li><code>{basename}</code> -用于创建的URL名称的基础。</li><li><code>{url_name}</code>- <code>url_name</code>提供给<code>@action</code>。</li></ul><p><strong>initkwargs</strong>：实例化视图时应传递的所有其他参数的字典。</p><h2 id="例"><a href="#例" class="headerlink" title="例"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#example" target="_blank" rel="noopener">例</a></h2><p>以下示例将仅路由到<code>list</code>和<code>retrieve</code>操作，并且不使用尾部斜杠约定。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.routers <span class="keyword">import</span> Route, DynamicRoute, SimpleRouter</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomReadOnlyRouter</span><span class="params">(SimpleRouter)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A router for read-only APIs, which doesn't use trailing slashes.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    routes = [</span><br><span class="line">        Route(</span><br><span class="line">            url=<span class="string">r'^&#123;prefix&#125;$'</span>,</span><br><span class="line">            mapping=&#123;<span class="string">'get'</span>: <span class="string">'list'</span>&#125;,</span><br><span class="line">            name=<span class="string">'&#123;basename&#125;-list'</span>,</span><br><span class="line">            detail=<span class="literal">False</span>,</span><br><span class="line">            initkwargs=&#123;<span class="string">'suffix'</span>: <span class="string">'List'</span>&#125;</span><br><span class="line">        ),</span><br><span class="line">        Route(</span><br><span class="line">            url=<span class="string">r'^&#123;prefix&#125;/&#123;lookup&#125;$'</span>,</span><br><span class="line">            mapping=&#123;<span class="string">'get'</span>: <span class="string">'retrieve'</span>&#125;,</span><br><span class="line">            name=<span class="string">'&#123;basename&#125;-detail'</span>,</span><br><span class="line">            detail=<span class="literal">True</span>,</span><br><span class="line">            initkwargs=&#123;<span class="string">'suffix'</span>: <span class="string">'Detail'</span>&#125;</span><br><span class="line">        ),</span><br><span class="line">        DynamicRoute(</span><br><span class="line">            url=<span class="string">r'^&#123;prefix&#125;/&#123;lookup&#125;/&#123;url_path&#125;$'</span>,</span><br><span class="line">            name=<span class="string">'&#123;basename&#125;-&#123;url_name&#125;'</span>,</span><br><span class="line">            detail=<span class="literal">True</span>,</span><br><span class="line">            initkwargs=&#123;&#125;</span><br><span class="line">        )</span><br><span class="line">    ]</span><br></pre></td></tr></table></figure><p>让我们看一下我们<code>CustomReadOnlyRouter</code>将为简单视图集生成的路线。</p><p><code>views.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserViewSet</span><span class="params">(viewsets.ReadOnlyModelViewSet)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A viewset that provides the standard actions</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    queryset = User.objects.all()</span><br><span class="line">    serializer_class = UserSerializer</span><br><span class="line">    lookup_field = <span class="string">'username'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">    @action(detail=True)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">group_names</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Returns a list of all the group names that the given</span></span><br><span class="line"><span class="string">        user belongs to.</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        user = self.get_object()</span><br><span class="line">        groups = user.groups.all()</span><br><span class="line">        <span class="keyword">return</span> Response([group.name <span class="keyword">for</span> group <span class="keyword">in</span> groups])</span><br></pre></td></tr></table></figure><p><code>urls.py</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">router = CustomReadOnlyRouter()</span><br><span class="line">router.register(<span class="string">'users'</span>, UserViewSet)</span><br><span class="line">urlpatterns = router.urls</span><br></pre></td></tr></table></figure><p>将生成以下映射…</p><table><thead><tr><th>URL</th><th>HTTP Method</th><th>Action</th><th>URL Name</th></tr></thead><tbody><tr><td>/users</td><td>GET</td><td>list</td><td>user-list</td></tr><tr><td>/users/{username}</td><td>GET</td><td>retrieve</td><td>user-detail</td></tr><tr><td>/users/{username}/group_names</td><td>GET</td><td>group_names</td><td>user-group-names</td></tr></tbody></table><p>有关设置<code>.routes</code>属性的另一个示例，请参见<code>SimpleRouter</code>该类的源代码。</p><h2 id="高级自定义路由器"><a href="#高级自定义路由器" class="headerlink" title="高级自定义路由器"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#advanced-custom-routers" target="_blank" rel="noopener">高级自定义路由器</a></h2><p>如果要提供完全自定义的行为，则可以重写<code>BaseRouter</code>和重写该<code>get_urls(self)</code>方法。该方法应检查已注册的视图集并返回URL模式列表。可以通过访问<code>self.registry</code>属性来检查已注册的前缀，视图集和基本名称元组。</p><p>您可能还想覆盖该<code>get_default_basename(self, viewset)</code>方法，或者<code>basename</code>在向路由器注册视图集时始终显式设置参数。</p><h1 id="第三方软件包"><a href="#第三方软件包" class="headerlink" title="第三方软件包"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#third-party-packages" target="_blank" rel="noopener">第三方软件包</a></h1><p>以下第三方软件包也可用。</p><h2 id="DRF嵌套路由器"><a href="#DRF嵌套路由器" class="headerlink" title="DRF嵌套路由器"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#drf-nested-routers" target="_blank" rel="noopener">DRF嵌套路由器</a></h2><p>的<a href="https://github.com/alanjds/drf-nested-routers" target="_blank" rel="noopener">DRF-嵌套的路由器包</a>提供路由器和关系字段用于与嵌套资源工作。</p><h2 id="ModelRouter（wq-db-rest）"><a href="#ModelRouter（wq-db-rest）" class="headerlink" title="ModelRouter（wq.db.rest）"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#modelrouter-wqdbrest" target="_blank" rel="noopener">ModelRouter（wq.db.rest）</a></h2><p>所述<a href="https://wq.io/wq.db" target="_blank" rel="noopener">wq.db包</a>提供了一个先进<a href="https://wq.io/docs/router" target="_blank" rel="noopener">ModelRouter</a>延伸类（和单个实例）<code>DefaultRouter</code>用<code>register_model()</code>的API。就像Django一样<code>admin.site.register</code>，唯一需要的参数<code>rest.router.register_model</code>是模型类。可以从模型和全局配置中推断出URL前缀，序列化程序和视图集的合理默认值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> wq.db <span class="keyword">import</span> rest</span><br><span class="line"><span class="keyword">from</span> myapp.models <span class="keyword">import</span> MyModel</span><br><span class="line"></span><br><span class="line">rest.router.register_model(MyModel)</span><br></pre></td></tr></table></figure><h2 id="DRF扩展"><a href="#DRF扩展" class="headerlink" title="DRF扩展"></a><a href="https://www.django-rest-framework.org/api-guide/routers/#drf-extensions" target="_blank" rel="noopener">DRF扩展</a></h2><p>该<a href="https://chibisov.github.io/drf-extensions/docs/" target="_blank" rel="noopener"><code>DRF-extensions</code>软件包</a>提供了<a href="https://chibisov.github.io/drf-extensions/docs/#routers" target="_blank" rel="noopener">路由器</a>创建<a href="https://chibisov.github.io/drf-extensions/docs/#nested-routes" target="_blank" rel="noopener">嵌套viewsets</a>，<a href="https://chibisov.github.io/drf-extensions/docs/#collection-level-controllers" target="_blank" rel="noopener">收藏级控制器</a>与<a href="https://chibisov.github.io/drf-extensions/docs/#controller-endpoint-name" target="_blank" rel="noopener">定制的端点名</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
          <category> Django-Rest-framework </category>
          
      </categories>
      
      
        <tags>
            
            <tag> restful </tag>
            
            <tag> Routers </tag>
            
            <tag> Django </tag>
            
            <tag> Django-Rest-framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django REST framework:ViewsSets</title>
      <link href="/blog/2020-01-15-ViewsSets.html"/>
      <url>/blog/2020-01-15-ViewsSets.html</url>
      
        <content type="html"><![CDATA[<p>在路由确定了要用于请求的控制器之后，您的控制器负责理解请求并产生适当的输出。</p><a id="more"></a><h1 id="ViewSets"><a href="#ViewSets" class="headerlink" title="ViewSets"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#viewsets" target="_blank" rel="noopener">ViewSets</a></h1><blockquote><p>在路由确定了要用于请求的控制器之后，您的控制器负责理解请求并产生适当的输出。</p><p>— <a href="https://guides.rubyonrails.org/routing.html" target="_blank" rel="noopener">Ruby on Rails文档</a></p></blockquote><p>ViewSets:视图集</p><p>Django REST框架允许您在称为的单个类中将一组相关视图的逻辑组合在一起<code>ViewSet</code>。在其他框架中，您可能还会发现概念上类似的实现，这些实现的名称类似于“资源”或“控制器”。</p><p><code>ViewSet</code>类只是<strong>一种类型的基于类的视图，即不提供任何方法的处理程序</strong>，例如<code>.get()</code>或<code>.post()</code>，而是提供操作，如<code>.list()</code>和<code>.create()</code>。</p><p>视图集的方法处理程序仅在完成视图时使用<code>.as_view（）</code>方法绑定到相应的操作。</p><p>通常，您将向路由器集注册视图集，而不是在urlconf中的视图集中显式注册视图，而是<strong>自动为您确定urlconf</strong>。</p><h2 id="例"><a href="#例" class="headerlink" title="例"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#example" target="_blank" rel="noopener">例</a></h2><p>让我们定义一个简单的视图集，可用于列出或检索系统中的所有用户。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> get_object_or_404</span><br><span class="line"><span class="keyword">from</span> myapps.serializers <span class="keyword">import</span> UserSerializer</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> viewsets</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserViewSet</span><span class="params">(viewsets.ViewSet)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A simple ViewSet for listing or retrieving users.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        queryset = User.objects.all()</span><br><span class="line">        serializer = UserSerializer(queryset, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">        queryset = User.objects.all()</span><br><span class="line">        user = get_object_or_404(queryset, pk=pk)</span><br><span class="line">        serializer = UserSerializer(user)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure><p>如果需要，可以将此<code>viewset</code>绑定到两个单独的视图中，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user_list = UserViewSet.as_view(&#123;<span class="string">'get'</span>: <span class="string">'list'</span>&#125;)</span><br><span class="line">user_detail = UserViewSet.as_view(&#123;<span class="string">'get'</span>: <span class="string">'retrieve'</span>&#125;)</span><br></pre></td></tr></table></figure><p>通常，我们不这样做，而是向路由器注册视图集，并允许自动生成urlconf。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> myapp.views <span class="keyword">import</span> UserViewSet</span><br><span class="line"><span class="keyword">from</span> rest_framework.routers <span class="keyword">import</span> DefaultRouter</span><br><span class="line"></span><br><span class="line">router = DefaultRouter()</span><br><span class="line">router.register(<span class="string">r'users'</span>, UserViewSet, basename=<span class="string">'user'</span>)</span><br><span class="line">urlpatterns = router.urls</span><br></pre></td></tr></table></figure><p>您通常不希望编写自己的视图集，而是要使用提供默认行为集的现有基类。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserViewSet</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A viewset for viewing and editing user instances.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    serializer_class = UserSerializer</span><br><span class="line">    queryset = User.objects.all()</span><br></pre></td></tr></table></figure><p>与使用<code>ViewSet</code>类相比，使用类有两个主要优点<code>View</code>。</p><ul><li>重复的逻辑可以合并为一个类。在上面的示例中，我们只需要指定<code>queryset</code>一次，它将在多个视图中使用。</li><li>通过使用路由器，我们不再需要自己处理URL conf。</li></ul><p>两者都需要权衡。使用常规视图和URL conf更加明确，并给您更多的控制权。如果您想快速启动并运行，或者当您使用大型API并希望在整个过程中实施一致的URL配置，则ViewSets很有帮助。</p><h2 id="ViewSet操作"><a href="#ViewSet操作" class="headerlink" title="ViewSet操作"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#viewset-actions" target="_blank" rel="noopener">ViewSet操作</a></h2><p>REST框架随附的默认路由器将为一组标准的  <code>create/retrieve/update/destroy</code> 样式操作提供路由，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserViewSet</span><span class="params">(viewsets.ViewSet)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Example empty viewset demonstrating the standard</span></span><br><span class="line"><span class="string">    actions that will be handled by a router class.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    If you're using format suffixes, make sure to also include</span></span><br><span class="line"><span class="string">    the `format=None` keyword argument for each action.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">retrieve</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">partial_update</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">destroy</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><h2 id="自省-ViewSet-动作"><a href="#自省-ViewSet-动作" class="headerlink" title="自省 ViewSet 动作"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#introspecting-viewset-actions" target="_blank" rel="noopener">自省 ViewSet 动作</a></h2><p>在分发期间，可以使用以下属性<code>ViewSet</code>。</p><ul><li><code>basename</code> -用于创建的URL名称的基础。</li><li><code>action</code>-当前动作的名称（例如<code>list</code>，<code>create</code>）。</li><li><code>detail</code> -布尔值，指示是否为列表视图或详细信息视图配置了当前操作。</li><li><code>suffix</code>-视图集类型的显示后缀-镜像<code>detail</code>属性。</li><li><code>name</code>-视图集的显示名称。此参数与互斥<code>suffix</code>。</li><li><code>description</code> -视图集单个视图的显示描述。</li></ul><p>您可以检查这些属性以根据当前操作调整行为。例如，您可以将权限限制为除以下<code>list</code>类似操作外的所有权限：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_permissions</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Instantiates and returns the list of permissions that this view requires.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">if</span> self.action == <span class="string">'list'</span>:</span><br><span class="line">        permission_classes = [IsAuthenticated]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        permission_classes = [IsAdmin]</span><br><span class="line">    <span class="keyword">return</span> [permission() <span class="keyword">for</span> permission <span class="keyword">in</span> permission_classes]</span><br></pre></td></tr></table></figure><h2 id="标记路由的额外操作"><a href="#标记路由的额外操作" class="headerlink" title="标记路由的额外操作"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#marking-extra-actions-for-routing" target="_blank" rel="noopener">标记路由的额外操作</a></h2><p>如果您具有可路由的临时方法，则可以使用<code>@action</code>装饰器将它们标记为可路由的。像常规操作一样，额外的操作可能打算用于单个对象或整个集合。为了表明这一点，请将<code>detail</code>参数设置为<code>True</code>或<code>False</code>。路由器将相应地配置其URL模式。例如，<code>DefaultRouter</code>将配置详细信息操作以包含<code>pk</code>在其URL模式中。</p><p>额外操作的更完整示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> status, viewsets</span><br><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> action</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> myapp.serializers <span class="keyword">import</span> UserSerializer, PasswordSerializer</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserViewSet</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A viewset that provides the standard actions</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    queryset = User.objects.all()</span><br><span class="line">    serializer_class = UserSerializer</span><br><span class="line"></span><br><span class="line"><span class="meta">    @action(detail=True, methods=['post'])</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_password</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">        user = self.get_object()</span><br><span class="line">        serializer = PasswordSerializer(data=request.data)</span><br><span class="line">        <span class="keyword">if</span> serializer.is_valid():</span><br><span class="line">            user.set_password(serializer.data[<span class="string">'password'</span>])</span><br><span class="line">            user.save()</span><br><span class="line">            <span class="keyword">return</span> Response(&#123;<span class="string">'status'</span>: <span class="string">'password set'</span>&#125;)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> Response(serializer.errors,</span><br><span class="line">                            status=status.HTTP_400_BAD_REQUEST)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @action(detail=False)</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">recent_users</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        recent_users = User.objects.all().order_by(<span class="string">'-last_login'</span>)</span><br><span class="line"></span><br><span class="line">        page = self.paginate_queryset(recent_users)</span><br><span class="line">        <span class="keyword">if</span> page <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            serializer = self.get_serializer(page, many=<span class="literal">True</span>)</span><br><span class="line">            <span class="keyword">return</span> self.get_paginated_response(serializer.data)</span><br><span class="line"></span><br><span class="line">        serializer = self.get_serializer(recent_users, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure><p>装饰器可以另外接受仅为路由视图设置的额外参数。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@action(detail=True, methods=['post'], permission_classes=[IsAdminOrIsSelf])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">set_password</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">   ...</span><br></pre></td></tr></table></figure><p>在<code>action</code>装饰后，系统会<code>GET</code>默认请求，也可以接受设定其他HTTP方法<code>methods</code>的参数。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@action(detail=True, methods=['post', 'delete'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">unset_password</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">   ...</span><br></pre></td></tr></table></figure><p>然后，两个新操作将在网址<code>^users/{pk}/set_password/$</code>和<code>^users/{pk}/unset_password/$</code></p><p>要查看所有其他操作，请调用<code>.get_extra_actions()</code>方法。</p><h3 id="路由其他HTTP方法以执行其他操作"><a href="#路由其他HTTP方法以执行其他操作" class="headerlink" title="路由其他HTTP方法以执行其他操作"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#routing-additional-http-methods-for-extra-actions" target="_blank" rel="noopener">路由其他HTTP方法以执行其他操作</a></h3><p>额外的操作可以将其他HTTP方法映射到单独的<code>ViewSet</code>方法。例如，上述密码设置/取消方法可以合并为一条路由。请注意，其他映射不接受参数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@action(detail=True, methods=['put'], name='Change Password')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">password</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">    <span class="string">"""Update the user's password."""</span></span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line"><span class="meta">@password.mapping.delete</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete_password</span><span class="params">(self, request, pk=None)</span>:</span></span><br><span class="line">    <span class="string">"""Delete the user's password."""</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><h2 id="反转URL"><a href="#反转URL" class="headerlink" title="反转URL"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#reversing-action-urls" target="_blank" rel="noopener">反转URL</a></h2><p>如果需要获取操作的URL，请使用<code>.reverse_action()</code>方法。这是的便利包装<code>reverse()</code>，可自动传递视图的<code>request</code>对象并<code>url_name</code>在<code>.basename</code>属性之前添加。</p><p>请注意，<code>basename</code>路由器在<code>ViewSet</code>注册过程中提供。如果您不使用路由器，则必须<code>basename</code>为该<code>.as_view()</code>方法提供参数。</p><p>使用上一节中的示例：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>view.reverse_action(<span class="string">'set-password'</span>, args=[<span class="string">'1'</span>])</span><br><span class="line"><span class="string">'http://localhost:8000/api/users/1/set_password'</span></span><br></pre></td></tr></table></figure><p>或者，您可以使用装饰器<code>url_name</code>设置的属性<code>@action</code>。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>view.reverse_action(view.set_password.url_name, args=[<span class="string">'1'</span>])</span><br><span class="line"><span class="string">'http://localhost:8000/api/users/1/set_password'</span></span><br></pre></td></tr></table></figure><p>的<code>url_name</code>参数<code>.reverse_action()</code>应与<code>@action</code>装饰器匹配相同的参数。此外，此方法可用于撤消默认操作，例如<code>list</code>和<code>create</code>。</p><hr><h1 id="API参考"><a href="#API参考" class="headerlink" title="API参考"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#api-reference" target="_blank" rel="noopener">API参考</a></h1><h2 id="ViewSet视图集"><a href="#ViewSet视图集" class="headerlink" title="ViewSet视图集"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#viewset" target="_blank" rel="noopener">ViewSet视图集</a></h2><p><code>ViewSet</code>类继承自<code>APIView</code>。您可以使用任何标准的属性，如<code>permission_classes</code>，<code>authentication_classes</code>以控制在视图集的API政策。</p><p>本<code>ViewSet</code>类不提供任何操作实现。为了使用一个<code>ViewSet</code>类，您将覆盖该类并显式定义动作实现。</p><h2 id="GenericViewSet通用视图集"><a href="#GenericViewSet通用视图集" class="headerlink" title="GenericViewSet通用视图集"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#genericviewset" target="_blank" rel="noopener">GenericViewSet通用视图集</a></h2><p><code>GenericViewSet</code>继承自<code>GenericAPIView</code>，并提供了默认设置<code>get_object</code>，<code>get_queryset</code>方法及其他通用视图基地的行为，但不包括默认情况下，任何动作。</p><p>为了使用一个<code>GenericViewSet</code>类，您将覆盖该类并混合所需的mixin类，或显式定义操作实现。</p><h2 id="ModelViewSet模型视图集"><a href="#ModelViewSet模型视图集" class="headerlink" title="ModelViewSet模型视图集"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#modelviewset" target="_blank" rel="noopener">ModelViewSet模型视图集</a></h2><p><code>ModelViewSet</code>继承自<code>GenericAPIView</code>，并包括用于各种动作实现方式中，通过在各种混入类的行为混合。</p><p>由提供的动作<code>ModelViewSet</code>类是<code>.list()</code>，<code>.retrieve()</code>， <code>.create()</code>，<code>.update()</code>，<code>.partial_update()</code>，和<code>.destroy()</code>。</p><h4 id="例-1"><a href="#例-1" class="headerlink" title="例"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#example_1" target="_blank" rel="noopener">例</a></h4><p>由于<code>ModelViewSet</code>拓展了 <code>GenericAPIView</code>，通常需要至少提供<code>queryset</code>和<code>serializer_class</code>属性。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AccountViewSet</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A simple ViewSet for viewing and editing accounts.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    queryset = Account.objects.all()</span><br><span class="line">    serializer_class = AccountSerializer</span><br><span class="line">    permission_classes = [IsAccountAdminOrReadOnly]</span><br></pre></td></tr></table></figure><p>请注意，您可以使用所提供的任何标准属性或方法替代<code>GenericAPIView</code>。例如，要使用<code>ViewSet</code>动态确定其应操作的查询集的，您可以执行以下操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AccountViewSet</span><span class="params">(viewsets.ModelViewSet)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A simple ViewSet for viewing and editing the accounts</span></span><br><span class="line"><span class="string">    associated with the user.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    serializer_class = AccountSerializer</span><br><span class="line">    permission_classes = [IsAccountAdminOrReadOnly]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.request.user.accounts.all()</span><br></pre></td></tr></table></figure><p>但是，请注意，从视图集中删除queryset属性后，任何关联的<a href="https://www.django-rest-framework.org/api-guide/routers/" target="_blank" rel="noopener">路由器</a>都将无法自动派生模型的basename，因此您必须将basename kwarg指定为<a href="https://www.django-rest-framework.org/api-guide/routers/" target="_blank" rel="noopener">路由器注册中</a>的一部分。</p><p>还要注意，尽管默认情况下此类提供了完整的<code>create / list / retrieve / update / destroy</code>操作集，但是您可以使用标准权限类来限制可用的操作。</p><h2 id="ReadOnlyModelViewSet"><a href="#ReadOnlyModelViewSet" class="headerlink" title="ReadOnlyModelViewSet"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#readonlymodelviewset" target="_blank" rel="noopener">ReadOnlyModelViewSet</a></h2><p>该<code>ReadOnlyModelViewSet</code>类也继承<code>GenericAPIView</code>。与<code>ModelViewSet</code>一样，它也包含各种动作的实现，但与<code>ModelViewSet</code>只提供“只读”动作不同，<code>.list()</code>和<code>.retrieve()</code>。</p><h4 id="例-2"><a href="#例-2" class="headerlink" title="例"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#example_2" target="_blank" rel="noopener">例</a></h4><p>与一样<code>ModelViewSet</code>，您通常至少需要提供<code>queryset</code>and <code>serializer_class</code>属性。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AccountViewSet</span><span class="params">(viewsets.ReadOnlyModelViewSet)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A simple ViewSet for viewing accounts.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    queryset = Account.objects.all()</span><br><span class="line">    serializer_class = AccountSerializer</span><br></pre></td></tr></table></figure><p>同样，<code>ModelViewSet</code>您可以使用的任何标准属性和方法替代<code>GenericAPIView</code>。</p><h1 id="自定义ViewSet基类"><a href="#自定义ViewSet基类" class="headerlink" title="自定义ViewSet基类"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#custom-viewset-base-classes" target="_blank" rel="noopener">自定义ViewSet基类</a></h1><p>您可能需要提供<code>ViewSet</code>没有完整<code>ModelViewSet</code>动作集或以其他方式自定义行为的自定义类。</p><h2 id="例-3"><a href="#例-3" class="headerlink" title="例"></a><a href="https://www.django-rest-framework.org/api-guide/viewsets/#example_3" target="_blank" rel="noopener">例</a></h2><p>要创建基础视图集类，提供<code>create</code>，<code>list</code>和<code>retrieve</code>操作，继承<code>GenericViewSet</code>和混入所需的操作：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> mixins</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CreateListRetrieveViewSet</span><span class="params">(mixins.CreateModelMixin,</span></span></span><br><span class="line"><span class="class"><span class="params">                                mixins.ListModelMixin,</span></span></span><br><span class="line"><span class="class"><span class="params">                                mixins.RetrieveModelMixin,</span></span></span><br><span class="line"><span class="class"><span class="params">                                viewsets.GenericViewSet)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    A viewset that provides `retrieve`, `create`, and `list` actions.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    To use it, override the class and set the `.queryset` and</span></span><br><span class="line"><span class="string">    `.serializer_class` attributes.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>通过创建自己的基<code>ViewSet</code>类，您可以提供可以在您的API的多个视图集中重用的常见行为。</p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
          <category> Django-Rest-framework </category>
          
      </categories>
      
      
        <tags>
            
            <tag> restful </tag>
            
            <tag> Views </tag>
            
            <tag> Django </tag>
            
            <tag> Django-Rest-framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django REST framework:Generic Views</title>
      <link href="/blog/2020-01-15-generic-views.html"/>
      <url>/blog/2020-01-15-generic-views.html</url>
      
        <content type="html"><![CDATA[<p>Django的通用视图…是作为通用用法模式的快捷方式而开发的…它们采用视图开发中发现的某些通用习语和模式并将其抽象化，以便您可以快速编写通用数据视图而无需重复自己。</p><a id="more"></a><h1 id="通用视图"><a href="#通用视图" class="headerlink" title="通用视图"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#generic-views" target="_blank" rel="noopener">通用视图</a></h1><blockquote><p>Django的通用视图…是作为通用用法模式的快捷方式而开发的…它们采用视图开发中发现的某些通用习语和模式并将其抽象化，以便您可以快速编写通用数据视图而无需重复自己。</p><p>— <a href="https://docs.djangoproject.com/en/stable/ref/class-based-views/#base-vs-generic-views" target="_blank" rel="noopener">Django文档</a></p></blockquote><p>基于类的视图的主要优点之一是它们允许您组成一些可重用行为的方式。REST框架通过提供许多提供常用模式的预构建视图来利用此优势。</p><p>REST框架提供的通用视图使您可以快速构建与数据库模型紧密映射的API视图。</p><p>如果通用视图不符合您的API的需求，则可<code>APIView</code>以下拉到使用常规类，或者重用通用视图使用的mixins和基类来组成自己的可重用通用视图集。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#examples" target="_blank" rel="noopener">例子</a></h2><p>通常，在使用通用视图时，您将覆盖视图并设置几个类属性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"><span class="keyword">from</span> myapp.serializers <span class="keyword">import</span> UserSerializer</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> generics</span><br><span class="line"><span class="keyword">from</span> rest_framework.permissions <span class="keyword">import</span> IsAdminUser</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserList</span><span class="params">(generics.ListCreateAPIView)</span>:</span></span><br><span class="line">    queryset = User.objects.all()</span><br><span class="line">    serializer_class = UserSerializer</span><br><span class="line">    permission_classes = [IsAdminUser]</span><br></pre></td></tr></table></figure><p>对于更复杂的情况，您可能还想覆盖视图类上的各种方法。例如。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserList</span><span class="params">(generics.ListCreateAPIView)</span>:</span></span><br><span class="line">    queryset = User.objects.all()</span><br><span class="line">    serializer_class = UserSerializer</span><br><span class="line">    permission_classes = [IsAdminUser]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">list</span><span class="params">(self, request)</span>:</span></span><br><span class="line">        <span class="comment"># Note the use of `get_queryset()` instead of `self.queryset`</span></span><br><span class="line">        queryset = self.get_queryset()</span><br><span class="line">        serializer = UserSerializer(queryset, many=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> Response(serializer.data)</span><br></pre></td></tr></table></figure><p>对于非常简单的情况，您可能希望使用<code>.as_view()</code>方法传递任何类属性。例如，您的URLconf可能包含类似以下条目的内容：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url(<span class="string">r'^/users/'</span>, ListCreateAPIView.as_view(queryset=User.objects.all(), serializer_class=UserSerializer), name=<span class="string">'user-list'</span>)</span><br></pre></td></tr></table></figure><hr><h1 id="API参考"><a href="#API参考" class="headerlink" title="API参考"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#api-reference" target="_blank" rel="noopener">API参考</a></h1><h2 id="GenericAPIView"><a href="#GenericAPIView" class="headerlink" title="GenericAPIView"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#genericapiview" target="_blank" rel="noopener">GenericAPIView</a></h2><p>该类扩展了REST框架的<code>APIView</code>类，为标准列表和详细信息视图添加了通常需要的行为。</p><p>提供的每个具体的通用视图都是通过将<code>GenericAPIView</code>，和一个或多个mixin类组合而构建的。</p><h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#attributes" target="_blank" rel="noopener">属性</a></h3><p><strong>基本设定</strong>：</p><p>以下属性控制基本视图行为。</p><ul><li><code>queryset</code>-应该用于从该视图返回对象的查询集。通常，您必须设置此属性或重写<code>get_queryset()</code>方法。如果要覆盖视图方法，则必须进行调用<code>get_queryset()</code>而不是直接访问此属性，这<code>queryset</code>将被评估一次，并且这些结果将被缓存用于所有后续请求，这一点很重要。</li><li><code>serializer_class</code>-应该用于验证和反序列化输入以及序列化输出的序列化器类。通常，您必须设置此属性或重写<code>get_serializer_class()</code>方法。</li><li><code>lookup_field</code>-应该用于执行单个模型实例的对象查找的模型字段。默认为<code>&#39;pk&#39;</code>。需要注意的是使用超链接的API时，您需要确保<em>双方</em>的API意见<em>和</em>串行类设置查找字段，如果你需要使用一个自定义值。</li><li><code>lookup_url_kwarg</code>-用于对象查找的URL关键字参数。URL conf应包含与此值相对应的关键字参数。如果未设置，则默认使用与相同的值<code>lookup_field</code>。</li></ul><p><strong>分页</strong>：</p><p>与列表视图一起使用时，以下属性用于控制分页。</p><ul><li><code>pagination_class</code>-对列表进行分页时应使用的分页类。默认值为与<code>DEFAULT_PAGINATION_CLASS</code>设置相同的值<code>&#39;rest_framework.pagination.PageNumberPagination&#39;</code>。设置<code>pagination_class=None</code>将禁用此视图上的分页。</li></ul><p><strong>筛选</strong>：</p><ul><li><code>filter_backends</code>-应该用于过滤查询集的过滤器后端类的列表。默认值为与<code>DEFAULT_FILTER_BACKENDS</code>设置相同的值。</li></ul><h3 id="方法"><a href="#方法" class="headerlink" title="方法"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#methods" target="_blank" rel="noopener">方法</a></h3><p><strong>基本方法</strong>：</p><h4 id="get-queryset-self"><a href="#get-queryset-self" class="headerlink" title="get_queryset(self)"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#get_querysetself" target="_blank" rel="noopener"><code>get_queryset(self)</code></a></h4><p>返回应用于列表视图的查询集，该查询集应用作详细视图中的查询的基础。默认情况下返回<code>queryset</code>属性指定的查询集。</p><p>应始终使用此方法，而不是<code>self.queryset</code>直接访问此方法，因为它<code>self.queryset</code>只会被评估一次，并且那些结果将为所有后续请求缓存。</p><p>可以重写以提供动态行为，例如返回特定于发出请求的用户的查询集。</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_queryset</span><span class="params">(self)</span>:</span></span><br><span class="line">    user = self.request.user</span><br><span class="line">    <span class="keyword">return</span> user.accounts.all()</span><br></pre></td></tr></table></figure><h4 id="get-object-self"><a href="#get-object-self" class="headerlink" title="get_object(self)"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#get_objectself" target="_blank" rel="noopener"><code>get_object(self)</code></a></h4><p>返回应用于详细信息视图的对象实例。默认为使用<code>lookup_field</code>参数过滤基本查询集。</p><p>可以重写以提供更复杂的行为，例如基于多个URL kwarg的对象查找。</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_object</span><span class="params">(self)</span>:</span></span><br><span class="line">    queryset = self.get_queryset()</span><br><span class="line">    filter = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> field <span class="keyword">in</span> self.multiple_lookup_fields:</span><br><span class="line">        filter[field] = self.kwargs[field]</span><br><span class="line"></span><br><span class="line">    obj = get_object_or_404(queryset, **filter)</span><br><span class="line">    self.check_object_permissions(self.request, obj)</span><br><span class="line">    <span class="keyword">return</span> obj</span><br></pre></td></tr></table></figure><p>请注意，如果您的API不包含任何对象级别的权限，则可以选择排除<code>self.check_object_permissions</code>，而只需从<code>get_object_or_404</code>查找中返回对象即可。</p><h4 id="filter-queryset-self-queryset"><a href="#filter-queryset-self-queryset" class="headerlink" title="filter_queryset(self, queryset)"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#filter_querysetself-queryset" target="_blank" rel="noopener"><code>filter_queryset(self, queryset)</code></a></h4><p>给定一个查询集，请使用正在使用的任何过滤器后端对其进行过滤，并返回一个新的查询集。</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">filter_queryset</span><span class="params">(self, queryset)</span>:</span></span><br><span class="line">    filter_backends = [CategoryFilter]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'geo_route'</span> <span class="keyword">in</span> self.request.query_params:</span><br><span class="line">        filter_backends = [GeoRouteFilter, CategoryFilter]</span><br><span class="line">    <span class="keyword">elif</span> <span class="string">'geo_point'</span> <span class="keyword">in</span> self.request.query_params:</span><br><span class="line">        filter_backends = [GeoPointFilter, CategoryFilter]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> backend <span class="keyword">in</span> list(filter_backends):</span><br><span class="line">        queryset = backend().filter_queryset(self.request, queryset, view=self)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> queryset</span><br></pre></td></tr></table></figure><h4 id="get-serializer-class-self"><a href="#get-serializer-class-self" class="headerlink" title="get_serializer_class(self)"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#get_serializer_classself" target="_blank" rel="noopener"><code>get_serializer_class(self)</code></a></h4><p>返回应用于序列化程序的类。默认为返回<code>serializer_class</code>属性。</p><p>可以重写以提供动态行为，例如使用不同的序列化程序进行读写操作，或为不同类型的用户提供不同的序列化程序。</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_serializer_class</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> self.request.user.is_staff:</span><br><span class="line">        <span class="keyword">return</span> FullAccountSerializer</span><br><span class="line">    <span class="keyword">return</span> BasicAccountSerializer</span><br></pre></td></tr></table></figure><p><strong>保存和删除钩子(hooks)</strong>：</p><p>mixin类提供了以下方法，它们提供了覆盖对象保存或删除行为的简便方法。</p><ul><li><code>perform_create(self, serializer)</code>- <code>CreateModelMixin</code>保存新对象实例时调用。</li><li><code>perform_update(self, serializer)</code>- <code>UpdateModelMixin</code>保存现有对象实例时调用。</li><li><code>perform_destroy(self, instance)</code>- <code>DestroyModelMixin</code>删除对象实例时调用。</li></ul><p>这些挂钩对于设置请求中隐含但不属于请求数据的属性特别有用。例如，您可以基于请求用户或基于URL关键字参数在对象上设置属性。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">perform_create</span><span class="params">(self, serializer)</span>:</span></span><br><span class="line">    serializer.save(user=self.request.user)</span><br></pre></td></tr></table></figure><p>这些覆盖点对于添加在保存对象之前或之后发生的行为（例如通过电子邮件发送确认或记录更新）也特别有用。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">perform_update</span><span class="params">(self, serializer)</span>:</span></span><br><span class="line">    instance = serializer.save()</span><br><span class="line">    send_email_confirmation(user=self.request.user, modified=instance)</span><br></pre></td></tr></table></figure><p>您还可以通过引发来使用这些挂钩提供其他验证<code>ValidationError()</code>。如果您需要在数据库保存时应用一些验证逻辑，这将很有用。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">perform_create</span><span class="params">(self, serializer)</span>:</span></span><br><span class="line">    queryset = SignupRequest.objects.filter(user=self.request.user)</span><br><span class="line">    <span class="keyword">if</span> queryset.exists():</span><br><span class="line">        <span class="keyword">raise</span> ValidationError(<span class="string">'You have already signed up'</span>)</span><br><span class="line">    serializer.save(user=self.request.user)</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：这些方法取代旧式的2.x版<code>pre_save</code>，<code>post_save</code>，<code>pre_delete</code>和<code>post_delete</code>方法，这将不再可用。</p><p><strong>其他方法</strong>：</p><p>尽管使用编写自定义视图，但您可能需要调用以下方法，因此通常不需要重写以下方法<code>GenericAPIView</code>。</p><ul><li><code>get_serializer_context(self)</code>-返回包含应提供给序列化程序的任何其他上下文的字典。默认为包括<code>&#39;request&#39;</code>，<code>&#39;view&#39;</code>和<code>&#39;format&#39;</code>关键词。</li><li><code>get_serializer(self, instance=None, data=None, many=False, partial=False)</code> -返回序列化器实例。</li><li><code>get_paginated_response(self, data)</code>-返回分页样式<code>Response</code>对象。</li><li><code>paginate_queryset(self, queryset)</code>-如果需要，对查询集进行分页，或者返回页面对象，或者<code>None</code>未为此视图配置分页。</li><li><code>filter_queryset(self, queryset)</code> -给定查询集，请使用正在使用的任何过滤器后端对其进行过滤，并返回新的查询集。</li></ul><hr><h1 id="Mixins"><a href="#Mixins" class="headerlink" title="Mixins"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#mixins" target="_blank" rel="noopener">Mixins</a></h1><p>mixin类提供用于提供基本视图行为的操作。请注意，mixin类提供了操作方法，而不是直接定义处理程序方法（例如<code>.get()</code>和<code>.post()</code>）。这样可以更灵活地构成行为。</p><p>mixin类可以从导入<code>rest_framework.mixins</code>。</p><h2 id="ListModelMixin"><a href="#ListModelMixin" class="headerlink" title="ListModelMixin"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#listmodelmixin" target="_blank" rel="noopener">ListModelMixin</a></h2><p>提供一种<code>.list(request, *args, **kwargs)</code>方法，该方法实现列出查询集。</p><p>如果填充了查询集，则返回一个<code>200 OK</code>响应，并将查询集的序列化表示形式作为响应的主体。可以可选地对响应数据进行分页。</p><h2 id="CreateModelMixin"><a href="#CreateModelMixin" class="headerlink" title="CreateModelMixin"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#createmodelmixin" target="_blank" rel="noopener">CreateModelMixin</a></h2><p>提供一种<code>.create(request, *args, **kwargs)</code>方法，该方法实现创建和保存新模型实例。</p><p>如果创建了对象，则返回一个<code>201 Created</code>响应，该对象的序列化表示作为响应的主体。如果表示形式包含名为的键<code>url</code>，则将<code>Location</code>使用该值填充响应的标头。</p><p>如果提供的用于创建对象的请求数据无效，<code>400 Bad Request</code>则将返回响应，并将错误详细信息作为响应的正文。</p><h2 id="RetrieveModelMixin"><a href="#RetrieveModelMixin" class="headerlink" title="RetrieveModelMixin"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#retrievemodelmixin" target="_blank" rel="noopener">RetrieveModelMixin</a></h2><p>提供一种<code>.retrieve(request, *args, **kwargs)</code>方法，该方法实现在响应中返回现有模型实例。</p><p>如果可以检索到对象，则返回一个<code>200 OK</code>响应，该对象的序列化表示作为响应的主体。否则将返回<code>404 Not Found</code>。</p><h2 id="UpdateModelMixin"><a href="#UpdateModelMixin" class="headerlink" title="UpdateModelMixin"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#updatemodelmixin" target="_blank" rel="noopener">UpdateModelMixin</a></h2><p>提供一种<code>.update(request, *args, **kwargs)</code>方法，该方法实现更新和保存现有模型实例。</p><p>还提供了一种<code>.partial_update(request, *args, **kwargs)</code>方法，该方法与该<code>update</code>方法类似，但是用于更新的所有字段都是可选的。这样可以支持HTTP <code>PATCH</code>请求。</p><p>如果对象被更新，它将返回一个<code>200 OK</code>响应，该对象的序列化表示作为响应的主体。</p><p>如果提供的用于更新对象的请求数据无效，<code>400 Bad Request</code>则将返回响应，并将错误详细信息作为响应的主体。</p><h2 id="DestroyModelMixin"><a href="#DestroyModelMixin" class="headerlink" title="DestroyModelMixin"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#destroymodelmixin" target="_blank" rel="noopener">DestroyModelMixin</a></h2><p>提供一种<code>.destroy(request, *args, **kwargs)</code>方法，该方法实现删除现有模型实例。</p><p>如果删除对象，则返回<code>204 No Content</code>响应，否则将返回<code>404 Not Found</code>。</p><hr><h1 id="具体的视图类"><a href="#具体的视图类" class="headerlink" title="具体的视图类"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#concrete-view-classes" target="_blank" rel="noopener">具体的视图类</a></h1><p>以下类是具体的通用视图。如果您使用的是通用视图，那么通常这就是您要使用的级别，除非需要大量的自定义行为。</p><p>可以从中导入视图类<code>rest_framework.generics</code>。</p><h2 id="CreateAPIView"><a href="#CreateAPIView" class="headerlink" title="CreateAPIView"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#createapiview" target="_blank" rel="noopener">CreateAPIView</a></h2><p>用于<strong>仅创建</strong>端点。</p><p>提供<code>post</code>方法处理程序。</p><p>扩展：<a href="https://www.django-rest-framework.org/api-guide/generic-views/#genericapiview" target="_blank" rel="noopener">GenericAPIView</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#createmodelmixin" target="_blank" rel="noopener">CreateModelMixin</a></p><h2 id="ListAPIView"><a href="#ListAPIView" class="headerlink" title="ListAPIView"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#listapiview" target="_blank" rel="noopener">ListAPIView</a></h2><p>用于<strong>只读</strong>端点，表示<strong>模型实例</strong>的<strong>集合</strong>。</p><p>提供<code>get</code>方法处理程序。</p><p>扩展：<a href="https://www.django-rest-framework.org/api-guide/generic-views/#genericapiview" target="_blank" rel="noopener">GenericAPIView</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#listmodelmixin" target="_blank" rel="noopener">ListModelMixin</a></p><h2 id="RetrieveAPIView"><a href="#RetrieveAPIView" class="headerlink" title="RetrieveAPIView"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#retrieveapiview" target="_blank" rel="noopener">RetrieveAPIView</a></h2><p>用于<strong>只读</strong>端点，以表示<strong>单个模型实例</strong>。</p><p>提供<code>get</code>方法处理程序。</p><p>扩展：<a href="https://www.django-rest-framework.org/api-guide/generic-views/#genericapiview" target="_blank" rel="noopener">GenericAPIView</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#retrievemodelmixin" target="_blank" rel="noopener">RetrieveModelMixin</a></p><h2 id="DestroyAPIView"><a href="#DestroyAPIView" class="headerlink" title="DestroyAPIView"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#destroyapiview" target="_blank" rel="noopener">DestroyAPIView</a></h2><p>用于<strong>单个模型实例**</strong>的仅删除**端点。</p><p>提供<code>delete</code>方法处理程序。</p><p>扩展：<a href="https://www.django-rest-framework.org/api-guide/generic-views/#genericapiview" target="_blank" rel="noopener">GenericAPIView</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#destroymodelmixin" target="_blank" rel="noopener">DestroyModelMixin</a></p><h2 id="UpdateAPIView"><a href="#UpdateAPIView" class="headerlink" title="UpdateAPIView"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#updateapiview" target="_blank" rel="noopener">UpdateAPIView</a></h2><p>用于<strong>单个模型实例**</strong>的仅更新**端点。</p><p>提供<code>put</code>和<code>patch</code>方法处理程序。</p><p>扩展：<a href="https://www.django-rest-framework.org/api-guide/generic-views/#genericapiview" target="_blank" rel="noopener">GenericAPIView</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#updatemodelmixin" target="_blank" rel="noopener">UpdateModelMixin</a></p><h2 id="ListCreateAPIView"><a href="#ListCreateAPIView" class="headerlink" title="ListCreateAPIView"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#listcreateapiview" target="_blank" rel="noopener">ListCreateAPIView</a></h2><p>用于<strong>读写</strong>端点，表示<strong>模型实例</strong>的<strong>集合</strong>。</p><p>提供<code>get</code>和<code>post</code>方法处理程序。</p><p>扩展：<a href="https://www.django-rest-framework.org/api-guide/generic-views/#genericapiview" target="_blank" rel="noopener">GenericAPIView</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#listmodelmixin" target="_blank" rel="noopener">ListModelMixin</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#createmodelmixin" target="_blank" rel="noopener">CreateModelMixin</a></p><h2 id="RetrieveUpdateAPIView"><a href="#RetrieveUpdateAPIView" class="headerlink" title="RetrieveUpdateAPIView"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#retrieveupdateapiview" target="_blank" rel="noopener">RetrieveUpdateAPIView</a></h2><p>用于<strong>读取或更新</strong>端点以表示<strong>单个模型实例</strong>。</p><p>提供<code>get</code>，<code>put</code>并且<code>patch</code>方法处理。</p><p>扩展：<a href="https://www.django-rest-framework.org/api-guide/generic-views/#genericapiview" target="_blank" rel="noopener">GenericAPIView</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#retrievemodelmixin" target="_blank" rel="noopener">RetrieveModelMixin</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#updatemodelmixin" target="_blank" rel="noopener">UpdateModelMixin</a></p><h2 id="RetrieveDestroyAPIView"><a href="#RetrieveDestroyAPIView" class="headerlink" title="RetrieveDestroyAPIView"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#retrievedestroyapiview" target="_blank" rel="noopener">RetrieveDestroyAPIView</a></h2><p>用于<strong>读取或删除</strong>端点，以表示<strong>单个模型实例</strong>。</p><p>提供<code>get</code>和<code>delete</code>方法处理程序。</p><p>扩展：<a href="https://www.django-rest-framework.org/api-guide/generic-views/#genericapiview" target="_blank" rel="noopener">GenericAPIView</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#retrievemodelmixin" target="_blank" rel="noopener">RetrieveModelMixin</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#destroymodelmixin" target="_blank" rel="noopener">DestroyModelMixin</a></p><h2 id="RetrieveUpdateDestroyAPIView"><a href="#RetrieveUpdateDestroyAPIView" class="headerlink" title="RetrieveUpdateDestroyAPIView"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#retrieveupdatedestroyapiview" target="_blank" rel="noopener">RetrieveUpdateDestroyAPIView</a></h2><p>用于<strong>读写删除</strong>端点，以表示<strong>单个模型实例</strong>。</p><p>提供<code>get</code>，<code>put</code>，<code>patch</code>和<code>delete</code>方法处理。</p><p>扩展：<a href="https://www.django-rest-framework.org/api-guide/generic-views/#genericapiview" target="_blank" rel="noopener">GenericAPIView</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#retrievemodelmixin" target="_blank" rel="noopener">RetrieveModelMixin</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#updatemodelmixin" target="_blank" rel="noopener">UpdateModelMixin</a>，<a href="https://www.django-rest-framework.org/api-guide/generic-views/#destroymodelmixin" target="_blank" rel="noopener">DestroyModelMixin</a></p><hr><h1 id="自定义通用视图"><a href="#自定义通用视图" class="headerlink" title="自定义通用视图"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#customizing-the-generic-views" target="_blank" rel="noopener">自定义通用视图</a></h1><p>通常，您会想要使用现有的通用视图，但会使用一些稍微自定义的行为。如果发现自己在多个地方重用了一些自定义行为，则可能需要将行为重构为一个通用类，然后可以根据需要将其应用于任何视图或视图集。</p><h2 id="创建自定义mixins"><a href="#创建自定义mixins" class="headerlink" title="创建自定义mixins"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#creating-custom-mixins" target="_blank" rel="noopener">创建自定义mixins</a></h2><p>例如，如果您需要基于URL conf中的多个字段查找对象，则可以创建如下的mixin类：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MultipleFieldLookupMixin</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Apply this mixin to any view or viewset to get multiple field filtering</span></span><br><span class="line"><span class="string">    based on a `lookup_fields` attribute, instead of the default single field filtering.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_object</span><span class="params">(self)</span>:</span></span><br><span class="line">        queryset = self.get_queryset()             <span class="comment"># Get the base queryset</span></span><br><span class="line">        queryset = self.filter_queryset(queryset)  <span class="comment"># Apply any filter backends</span></span><br><span class="line">        filter = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> field <span class="keyword">in</span> self.lookup_fields:</span><br><span class="line">            <span class="keyword">if</span> self.kwargs[field]: <span class="comment"># Ignore empty fields.</span></span><br><span class="line">                filter[field] = self.kwargs[field]</span><br><span class="line">        obj = get_object_or_404(queryset, **filter)  <span class="comment"># Lookup the object</span></span><br><span class="line">        self.check_object_permissions(self.request, obj)</span><br><span class="line">        <span class="keyword">return</span> obj</span><br></pre></td></tr></table></figure><p>然后，您可以在需要应用自定义行为的任何时间简单地将此混入应用于视图或视图集。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RetrieveUserView</span><span class="params">(MultipleFieldLookupMixin, generics.RetrieveAPIView)</span>:</span></span><br><span class="line">    queryset = User.objects.all()</span><br><span class="line">    serializer_class = UserSerializer</span><br><span class="line">    lookup_fields = [<span class="string">'account'</span>, <span class="string">'username'</span>]</span><br></pre></td></tr></table></figure><p>如果您需要使用自定义行为，则使用自定义混合是一个不错的选择。</p><h2 id="创建自定义基类"><a href="#创建自定义基类" class="headerlink" title="创建自定义基类"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#creating-custom-base-classes" target="_blank" rel="noopener">创建自定义基类</a></h2><p>如果要在多个视图之间使用混合，则可以更进一步，并创建自己的基础视图集，然后将其用于整个项目。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseRetrieveView</span><span class="params">(MultipleFieldLookupMixin,</span></span></span><br><span class="line"><span class="class"><span class="params">                       generics.RetrieveAPIView)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BaseRetrieveUpdateDestroyView</span><span class="params">(MultipleFieldLookupMixin,</span></span></span><br><span class="line"><span class="class"><span class="params">                                    generics.RetrieveUpdateDestroyAPIView)</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><p>如果您有自定义行为，并且需要在整个项目中的大量视图中重复执行自定义行为，那么使用自定义基类是一个不错的选择。</p><hr><h1 id="PUT-为创建"><a href="#PUT-为创建" class="headerlink" title="PUT 为创建"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#put-as-create" target="_blank" rel="noopener">PUT 为创建</a></h1><p>在3.0版之前<code>PUT</code>，取决于对象是否存在，REST框架混合将其视为更新或创建操作。</p><p>允许<code>PUT</code>作为创建操作是有问题的，因为它必须公开有关对象存在或不存在的信息。与简单地返回<code>404</code>响应相比，透明地允许重新创建先前删除的实例必然是更好的默认行为，这也不是显而易见的。</p><p>“ <code>PUT</code>as 404”和“ <code>PUT</code>as create” 这两种样式在不同情况下都可以有效，但是从3.0版开始，由于它更简单，更明显，我们现在将404行为用作默认行为。</p><p>如果需要通用的PUT即创建行为，则可能需要将<a href="https://gist.github.com/tomchristie/a2ace4577eff2c603b1b" target="_blank" rel="noopener">此类之<code>AllowPUTAsCreateMixin</code>类的内容</a>作为混合添加到视图中。</p><hr><h1 id="第三方包"><a href="#第三方包" class="headerlink" title="第三方包"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#third-party-packages" target="_blank" rel="noopener">第三方包</a></h1><p>以下第三方软件包提供了其他通用视图实现。</p><h2 id="Django-Rest多种模型"><a href="#Django-Rest多种模型" class="headerlink" title="Django Rest多种模型"></a><a href="https://www.django-rest-framework.org/api-guide/generic-views/#django-rest-multiple-models" target="_blank" rel="noopener">Django Rest多种模型</a></h2><p><a href="https://github.com/MattBroach/DjangoRestMultipleModels" target="_blank" rel="noopener">Django Rest Multiple Models</a>提供了通用视图（和混合），用于通过单个API请求发送多个序列化的模型和/或查询集。</p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
          <category> Django-Rest-framework </category>
          
      </categories>
      
      
        <tags>
            
            <tag> restful </tag>
            
            <tag> Views </tag>
            
            <tag> Django </tag>
            
            <tag> Django-Rest-framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django REST framework:Views</title>
      <link href="/blog/2020-01-15-Views.html"/>
      <url>/blog/2020-01-15-Views.html</url>
      
        <content type="html"><![CDATA[<p>Django的基于类的视图是对旧式视图的欢迎。</p><a id="more"></a><h1 id="基于类的视图"><a href="#基于类的视图" class="headerlink" title="基于类的视图"></a><a href="https://www.django-rest-framework.org/api-guide/views/#class-based-views" target="_blank" rel="noopener">基于类的视图</a></h1><blockquote><p>Django的基于类的视图是对旧式视图的欢迎。</p><p>— <a href="https://reinout.vanrees.org/weblog/2011/08/24/class-based-views-usage.html" target="_blank" rel="noopener">Reinout van Rees</a></p></blockquote><p>REST框架提供了一个<code>APIView</code>类，该类继承了Django的<code>View</code>类。</p><p><code>APIView</code>类与常规<code>View</code>类在以下方面有所不同：</p><ul><li>传递给处理程序方法的请求将是REST框架的<code>Request</code>实例，而不是Django的<code>HttpRequest</code>实例。</li><li>处理程序方法可能返回REST框架的<code>Response</code>而不是Django的<code>HttpResponse</code>。该视图将管理内容协商并在响应上设置正确的渲染器。</li><li>任何<code>APIException</code>异常都将被捕获并调解为适当的响应。</li><li>在将请求分派到处理程序方法之前，将对传入的请求进行身份验证并进行适当的权限和/或限制检查。</li></ul><p>使用<code>APIView</code>该类与使用常规<code>View</code>类几乎相同，通常，传入的请求将分派到适当的处理程序方法，例如<code>.get()</code>或<code>.post()</code>。另外，可以在控制API策略各个方面的类上设置许多属性。</p><p>例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.views <span class="keyword">import</span> APIView</span><br><span class="line"><span class="keyword">from</span> rest_framework.response <span class="keyword">import</span> Response</span><br><span class="line"><span class="keyword">from</span> rest_framework <span class="keyword">import</span> authentication, permissions</span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ListUsers</span><span class="params">(APIView)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    View to list all users in the system.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    * Requires token authentication.</span></span><br><span class="line"><span class="string">    * Only admin users are able to access this view.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    authentication_classes = [authentication.TokenAuthentication]</span><br><span class="line">    permission_classes = [permissions.IsAdminUser]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">(self, request, format=None)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        Return a list of all users.</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        usernames = [user.username <span class="keyword">for</span> user <span class="keyword">in</span> User.objects.all()]</span><br><span class="line">        <span class="keyword">return</span> Response(usernames)</span><br></pre></td></tr></table></figure><hr><p><strong>注</strong>：完整的方法，属性，并与Django的REST框架的关系<code>APIView</code>，<code>GenericAPIView</code>各种<code>Mixins</code>，并且<code>Viewsets</code>可以初步复杂。除了此处的文档外，<a href="http://www.cdrf.co/" target="_blank" rel="noopener">Classy Django REST Framework</a>资源还为每个Django REST Framework基于类的视图提供了可浏览的参考，以及完整的方法和属性。</p><hr><h2 id="API策略属性"><a href="#API策略属性" class="headerlink" title="API策略属性"></a><a href="https://www.django-rest-framework.org/api-guide/views/#api-policy-attributes" target="_blank" rel="noopener">API策略属性</a></h2><p>以下属性控制API视图的可插入方面。</p><h3 id="renderer-classes"><a href="#renderer-classes" class="headerlink" title=".renderer_classes"></a><a href="https://www.django-rest-framework.org/api-guide/views/#renderer_classes" target="_blank" rel="noopener">.renderer_classes</a></h3><h3 id="parser-classes"><a href="#parser-classes" class="headerlink" title=".parser_classes"></a><a href="https://www.django-rest-framework.org/api-guide/views/#parser_classes" target="_blank" rel="noopener">.parser_classes</a></h3><h3 id="authentication-classes"><a href="#authentication-classes" class="headerlink" title=".authentication_classes"></a><a href="https://www.django-rest-framework.org/api-guide/views/#authentication_classes" target="_blank" rel="noopener">.authentication_classes</a></h3><h3 id="throttle-classes"><a href="#throttle-classes" class="headerlink" title=".throttle_classes"></a><a href="https://www.django-rest-framework.org/api-guide/views/#throttle_classes" target="_blank" rel="noopener">.throttle_classes</a></h3><h3 id="permission-classes"><a href="#permission-classes" class="headerlink" title=".permission_classes"></a><a href="https://www.django-rest-framework.org/api-guide/views/#permission_classes" target="_blank" rel="noopener">.permission_classes</a></h3><h3 id="content-negotiation-class"><a href="#content-negotiation-class" class="headerlink" title=".content_negotiation_class"></a><a href="https://www.django-rest-framework.org/api-guide/views/#content_negotiation_class" target="_blank" rel="noopener">.content_negotiation_class</a></h3><h2 id="API策略实例化方法"><a href="#API策略实例化方法" class="headerlink" title="API策略实例化方法"></a><a href="https://www.django-rest-framework.org/api-guide/views/#api-policy-instantiation-methods" target="_blank" rel="noopener">API策略实例化方法</a></h2><p>REST框架使用以下方法来实例化各种可插拔API策略。您通常不需要重写这些方法。</p><h3 id="get-renderers-self"><a href="#get-renderers-self" class="headerlink" title=".get_renderers(self)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#get_renderersself" target="_blank" rel="noopener">.get_renderers(self)</a></h3><h3 id="get-parsers-self"><a href="#get-parsers-self" class="headerlink" title=".get_parsers(self)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#get_parsersself" target="_blank" rel="noopener">.get_parsers(self)</a></h3><h3 id="get-authenticators-self"><a href="#get-authenticators-self" class="headerlink" title=".get_authenticators(self)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#get_authenticatorsself" target="_blank" rel="noopener">.get_authenticators(self)</a></h3><h3 id="get-throttles-self"><a href="#get-throttles-self" class="headerlink" title=".get_throttles(self)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#get_throttlesself" target="_blank" rel="noopener">.get_throttles(self)</a></h3><h3 id="get-permissions-self"><a href="#get-permissions-self" class="headerlink" title=".get_permissions(self)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#get_permissionsself" target="_blank" rel="noopener">.get_permissions(self)</a></h3><h3 id="get-content-negotiator-self"><a href="#get-content-negotiator-self" class="headerlink" title=".get_content_negotiator(self)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#get_content_negotiatorself" target="_blank" rel="noopener">.get_content_negotiator(self)</a></h3><h3 id="get-exception-handler-self"><a href="#get-exception-handler-self" class="headerlink" title=".get_exception_handler(self)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#get_exception_handlerself" target="_blank" rel="noopener">.get_exception_handler(self)</a></h3><h2 id="API策略实施方法"><a href="#API策略实施方法" class="headerlink" title="API策略实施方法"></a><a href="https://www.django-rest-framework.org/api-guide/views/#api-policy-implementation-methods" target="_blank" rel="noopener">API策略实施方法</a></h2><p>在分派到处理程序方法之前，将调用以下方法。</p><h3 id="check-permissions-self-request"><a href="#check-permissions-self-request" class="headerlink" title=".check_permissions(self, request)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#check_permissionsself-request" target="_blank" rel="noopener">.check_permissions(self, request)</a></h3><h3 id="check-throttles-self-request"><a href="#check-throttles-self-request" class="headerlink" title=".check_throttles(self, request)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#check_throttlesself-request" target="_blank" rel="noopener">.check_throttles(self, request)</a></h3><h3 id="perform-content-negotiation-self-request-force-False"><a href="#perform-content-negotiation-self-request-force-False" class="headerlink" title=".perform_content_negotiation(self, request, force=False)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#perform_content_negotiationself-request-forcefalse" target="_blank" rel="noopener">.perform_content_negotiation(self, request, force=False)</a></h3><h2 id="Dispatch-方法"><a href="#Dispatch-方法" class="headerlink" title="Dispatch 方法"></a><a href="https://www.django-rest-framework.org/api-guide/views/#dispatch-methods" target="_blank" rel="noopener">Dispatch 方法</a></h2><p>视图的<code>.dispatch()</code>方法直接调用以下方法。这些执行需要之前或调用处理方法，如之后发生的任何动作<code>.get()</code>，<code>.post()</code>，<code>put()</code>，<code>patch()</code>和<code>.delete()</code>。</p><h3 id="initial-self-request-args-kwargs"><a href="#initial-self-request-args-kwargs" class="headerlink" title=".initial(self, request, args, *kwargs)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#initialself-request-42args-kwargs" target="_blank" rel="noopener">.initial(self, request, <em>args, *</em>kwargs)</a></h3><p>执行在调用处理程序方法之前需要执行的所有操作。此方法用于强制执行权限和限制，并执行内容协商。</p><p>您通常不需要重写此方法。</p><h3 id="handle-exception-self-exc"><a href="#handle-exception-self-exc" class="headerlink" title=".handle_exception(self, exc)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#handle_exceptionself-exc" target="_blank" rel="noopener">.handle_exception(self, exc)</a></h3><p>处理程序方法引发的任何异常都将传递给此方法，该方法将返回一个<code>Response</code>实例，或重新引发该异常。</p><p>默认实现处理的任何子类<code>rest_framework.exceptions.APIException</code>以及Django的<code>Http404</code>和<code>PermissionDenied</code>异常，并返回适当的错误响应。</p><p>如果您需要自定义错误响应，那么您的API返回的值应该子类化此方法。</p><h3 id="initialize-request-self-request-args-kwargs"><a href="#initialize-request-self-request-args-kwargs" class="headerlink" title=".initialize_request(self, request, args, *kwargs)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#initialize_requestself-request-42args-kwargs" target="_blank" rel="noopener">.initialize_request(self, request, <em>args, *</em>kwargs)</a></h3><p>确保传递给处理程序方法的请求对象是的实例<code>Request</code>，而不是通常的Django <code>HttpRequest</code>。</p><p>您通常不需要重写此方法。</p><h3 id="finalize-response-self-request-response-args-kwargs"><a href="#finalize-response-self-request-response-args-kwargs" class="headerlink" title=".finalize_response(self, request, response, args, *kwargs)"></a><a href="https://www.django-rest-framework.org/api-guide/views/#finalize_responseself-request-response-42args-kwargs" target="_blank" rel="noopener">.finalize_response(self, request, response, <em>args, *</em>kwargs)</a></h3><p>确保<code>Response</code>从处理程序方法返回的任何对象都将呈现为正确的内容类型，这由内容协商确定。</p><p>您通常不需要重写此方法。</p><hr><h1 id="基于函数的视图"><a href="#基于函数的视图" class="headerlink" title="基于函数的视图"></a><a href="https://www.django-rest-framework.org/api-guide/views/#function-based-views" target="_blank" rel="noopener">基于函数的视图</a></h1><blockquote><p>说[基于类的视图]始终是最佳解决方案，这是一个错误。</p><p>— <a href="http://www.boredomandlaziness.org/2012/05/djangos-cbvs-are-not-mistake-but.html" target="_blank" rel="noopener">尼克·科格兰</a></p></blockquote><p>REST框架还允许您使用基于常规函数的视图。它提供了一组简单的装饰器，包装了基于函数的视图，以确保它们接收的实例<code>Request</code>（而不是通常的Django <code>HttpRequest</code>），并允许它们返回<code>Response</code>（而不是Django <code>HttpResponse</code>），并允许您配置如何处理请求。</p><h2 id="api-view（）"><a href="#api-view（）" class="headerlink" title="@api_view（）"></a><a href="https://www.django-rest-framework.org/api-guide/views/#api_view" target="_blank" rel="noopener">@api_view（）</a></h2><p><strong>签名：</strong> <code>@api_view(http_method_names=[&#39;GET&#39;])</code></p><p>该功能的核心是<code>api_view</code>装饰器，该装饰器列出了视图应响应的HTTP方法的列表。例如，这是您编写一个非常简单的视图的方式，只需手动返回一些数据即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> api_view</span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view()</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> Response(&#123;<span class="string">"message"</span>: <span class="string">"Hello, world!"</span>&#125;)</span><br></pre></td></tr></table></figure><p>该视图将使用<a href="https://www.django-rest-framework.org/api-guide/settings/" target="_blank" rel="noopener">设置中</a>指定的默认渲染器，解析器，身份验证类等。</p><p>默认情况下，只<code>GET</code>接受方法。其他方法将响应“ 405方法不允许”。要更改此行为，请指定视图允许的方法，如下所示：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api_view(['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        <span class="keyword">return</span> Response(&#123;<span class="string">"message"</span>: <span class="string">"Got some data!"</span>, <span class="string">"data"</span>: request.data&#125;)</span><br><span class="line">    <span class="keyword">return</span> Response(&#123;<span class="string">"message"</span>: <span class="string">"Hello, world!"</span>&#125;)</span><br></pre></td></tr></table></figure><h2 id="API策略装饰器"><a href="#API策略装饰器" class="headerlink" title="API策略装饰器"></a><a href="https://www.django-rest-framework.org/api-guide/views/#api-policy-decorators" target="_blank" rel="noopener">API策略装饰器</a></h2><p>要覆盖默认设置，REST框架提供了一组其他装饰器，可以将其添加到视图中。这些必须在装饰器<code>@api_view</code><em>之后</em>（下方）进行。例如，要创建使用<a href="https://www.django-rest-framework.org/api-guide/throttling/" target="_blank" rel="noopener">throttle</a> 来确保特定用户每天只能调用一次的视图，请使用<code>@throttle_classes</code>装饰器，并传递油门类列表：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> api_view, throttle_classes</span><br><span class="line"><span class="keyword">from</span> rest_framework.throttling <span class="keyword">import</span> UserRateThrottle</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OncePerDayUserThrottle</span><span class="params">(UserRateThrottle)</span>:</span></span><br><span class="line">        rate = <span class="string">'1/day'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view(['GET'])</span></span><br><span class="line"><span class="meta">@throttle_classes([OncePerDayUserThrottle])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> Response(&#123;<span class="string">"message"</span>: <span class="string">"Hello for today! See you tomorrow!"</span>&#125;)</span><br></pre></td></tr></table></figure><p>这些装饰器对应于<code>APIView</code>如上所述在子类上设置的属性。</p><p>可用的装饰器是：</p><ul><li><code>@renderer_classes(...)</code></li><li><code>@parser_classes(...)</code></li><li><code>@authentication_classes(...)</code></li><li><code>@throttle_classes(...)</code></li><li><code>@permission_classes(...)</code></li></ul><p>这些装饰器中的每一个都带有一个参数，该参数必须是类的列表或元组。</p><h2 id="视图架构装饰器"><a href="#视图架构装饰器" class="headerlink" title="视图架构装饰器"></a><a href="https://www.django-rest-framework.org/api-guide/views/#view-schema-decorator" target="_blank" rel="noopener">视图架构装饰器</a></h2><p>要覆盖基于函数的视图的默认架构生成，可以使用<code>@schema</code>装饰器。这必须在装饰器<code>@api_view</code><em>之后</em>（下方）进行。例如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> rest_framework.decorators <span class="keyword">import</span> api_view, schema</span><br><span class="line"><span class="keyword">from</span> rest_framework.schemas <span class="keyword">import</span> AutoSchema</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomAutoSchema</span><span class="params">(AutoSchema)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_link</span><span class="params">(self, path, method, base_url)</span>:</span></span><br><span class="line">        <span class="comment"># override view introspection here...</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@api_view(['GET'])</span></span><br><span class="line"><span class="meta">@schema(CustomAutoSchema())</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> Response(&#123;<span class="string">"message"</span>: <span class="string">"Hello for today! See you tomorrow!"</span>&#125;)</span><br></pre></td></tr></table></figure><p>该装饰器采用一个<code>AutoSchema</code>实例，一个<code>AutoSchema</code>子类实例或<a href="https://www.django-rest-framework.org/api-guide/schemas/" target="_blank" rel="noopener">Schemas文档</a><code>ManualSchema</code>中所述的实例。您可以通过以将视图从架构生成中排除。<code>None</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@api_view(['GET'])</span></span><br><span class="line"><span class="meta">@schema(None)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">view</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> Response(&#123;<span class="string">"message"</span>: <span class="string">"Will not appear in schema!"</span>&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
          <category> Django-Rest-framework </category>
          
      </categories>
      
      
        <tags>
            
            <tag> restful </tag>
            
            <tag> Views </tag>
            
            <tag> Django </tag>
            
            <tag> Django-Rest-framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django REST framework:Responses</title>
      <link href="/blog/2020-01-15-Responses.html"/>
      <url>/blog/2020-01-15-Responses.html</url>
      
        <content type="html"><![CDATA[<p>与基本的HttpResponse对象不同，TemplateResponse对象保留视图提供的上下文详细信息以计算响应。直到需要时才在响应过程的后面计算响应的最终输出。</p><a id="more"></a><h1 id="Responses"><a href="#Responses" class="headerlink" title="Responses"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#responses" target="_blank" rel="noopener">Responses</a></h1><blockquote><p>与基本的HttpResponse对象不同，TemplateResponse对象保留视图提供的上下文详细信息以计算响应。直到需要时才在响应过程的后面计算响应的最终输出。</p><p>— <a href="https://docs.djangoproject.com/en/stable/ref/template-response/" target="_blank" rel="noopener">Django文档</a></p></blockquote><p>REST框架通过提供一个<code>Response</code>类来支持HTTP内容协商，该类允许您根据客户端请求返回可以呈现为多种内容类型的内容。</p><p>在<code>Response</code>类的子类Django的<code>SimpleTemplateResponse</code>。 <code>Response</code>对象使用数据初始化，该数据应包含本地Python原语。然后，REST框架使用标准的HTTP内容协商来确定应如何呈现最终响应内容。</p><p>不需要使用<code>Response</code>该类，也可以根据需要从视图中返回常规<code>HttpResponse</code>或<code>StreamingHttpResponse</code>对象。使用<code>Response</code>该类只是为返回内容协商的Web API响应提供了一个更好的接口，该响应可以呈现为多种格式。</p><p>除非出于某种原因要大量定制REST框架，否则应始终对返回对象的视图使用<code>APIView</code>类或<code>@api_view</code>函数<code>Response</code>。这样做可确保在视图返回视图之前，视图可以执行内容协商并为响应选择适当的渲染器。</p><hr><h1 id="建立回应"><a href="#建立回应" class="headerlink" title="建立回应"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#creating-responses" target="_blank" rel="noopener">建立回应</a></h1><h2 id="Response"><a href="#Response" class="headerlink" title="Response()"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#response" target="_blank" rel="noopener">Response()</a></h2><p><strong>签名：</strong> <code>Response(data, status=None, template_name=None, headers=None, content_type=None)</code></p><p>与常规<code>HttpResponse</code>对象不同，您不会实例化<code>Response</code>具有渲染内容的对象。相反，您传递未渲染的数据，该数据可能包含任何Python原语。</p><p><code>Response</code>该类使用的渲染器无法本地处理诸如Django模型实例之类的复杂数据类型，因此您需要在创建<code>Response</code>对象之前将数据序列化为原始数据类型。</p><p>您可以使用REST框架的<code>Serializer</code>类来执行此数据序列化，也可以使用自己的自定义序列化。</p><p>参数：</p><ul><li><code>data</code>：响应的序列化数据。</li><li><code>status</code>：响应的状态码。默认值为200。另请参见<a href="https://www.django-rest-framework.org/api-guide/status-codes/" target="_blank" rel="noopener">状态码</a>。</li><li><code>template_name</code>：<code>HTMLRenderer</code>选择了要使用的模板名称。</li><li><code>headers</code>：在响应中使用的HTTP标头字典。</li><li><code>content_type</code>：响应的内容类型。通常，这将由呈现器根据内容协商确定自动设置，但是在某些情况下，您需要显式指定内容类型。</li></ul><hr><h1 id="属性"><a href="#属性" class="headerlink" title="属性"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#attributes" target="_blank" rel="noopener">属性</a></h1><h2 id="data"><a href="#data" class="headerlink" title=".data"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#data" target="_blank" rel="noopener">.data</a></h2><p>响应的未呈现的序列化数据。</p><h2 id="status-code"><a href="#status-code" class="headerlink" title=".status_code"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#status_code" target="_blank" rel="noopener">.status_code</a></h2><p>HTTP响应的数字状态码。</p><h2 id="content"><a href="#content" class="headerlink" title=".content"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#content" target="_blank" rel="noopener">.content</a></h2><p>响应的呈现内容。必须先调用<code>.render()</code>方法，然后<code>.content</code>才能访问该方法。</p><h2 id="template-name"><a href="#template-name" class="headerlink" title=".template_name"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#template_name" target="_blank" rel="noopener">.template_name</a></h2><p>的<code>template_name</code>，如果提供。仅当<code>HTMLRenderer</code>或其他自定义模板渲染器是响应的可接受渲染器时才需要。</p><h2 id="accepted-renderer"><a href="#accepted-renderer" class="headerlink" title=".accepted_renderer"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#accepted_renderer" target="_blank" rel="noopener">.accepted_renderer</a></h2><p>将用于呈现响应的呈现器实例。</p><p>由<code>APIView</code>或<code>@api_view</code>在视图返回响应之前自动设置。</p><h2 id="accepted-media-type"><a href="#accepted-media-type" class="headerlink" title=".accepted_media_type"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#accepted_media_type" target="_blank" rel="noopener">.accepted_media_type</a></h2><p>内容协商阶段选择的媒体类型。</p><p>由<code>APIView</code>或<code>@api_view</code>在视图返回响应之前自动设置。</p><h2 id="renderer-context"><a href="#renderer-context" class="headerlink" title=".renderer_context"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#renderer_context" target="_blank" rel="noopener">.renderer_context</a></h2><p>附加上下文信息的词典，该词典将传递给渲染器的<code>.render()</code>方法。</p><p>由<code>APIView</code>或<code>@api_view</code>在视图返回响应之前自动设置。</p><hr><h1 id="标准HttpResponse属性"><a href="#标准HttpResponse属性" class="headerlink" title="标准HttpResponse属性"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#standard-httpresponse-attributes" target="_blank" rel="noopener">标准HttpResponse属性</a></h1><p>在<code>Response</code>类扩展<code>SimpleTemplateResponse</code>，和所有常见的属性和方法也可在回应。例如，您可以以标准方式在响应上设置标头：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">response = Response()</span><br><span class="line">response[<span class="string">'Cache-Control'</span>] = <span class="string">'no-cache'</span></span><br></pre></td></tr></table></figure><h2 id="render（）"><a href="#render（）" class="headerlink" title=".render（）"></a><a href="https://www.django-rest-framework.org/api-guide/responses/#render" target="_blank" rel="noopener">.render（）</a></h2><p><strong>签名：</strong> <code>.render()</code></p><p>与任何其他<code>TemplateResponse</code>方法一样，调用此方法可将响应的序列化数据呈现为最终响应内容。当<code>.render()</code>被调用时，响应内容将被设置为调用的结果<code>.render(data, accepted_media_type, renderer_context)</code>对方法<code>accepted_renderer</code>实例。</p><p>通常，您不需要自称<code>.render()</code>，因为它是Django的标准响应周期所处理的。</p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
          <category> Django-Rest-framework </category>
          
      </categories>
      
      
        <tags>
            
            <tag> restful </tag>
            
            <tag> Responses </tag>
            
            <tag> Django </tag>
            
            <tag> Django-Rest-framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Django REST framework:Request</title>
      <link href="/blog/2020-01-14-requst.html"/>
      <url>/blog/2020-01-14-requst.html</url>
      
        <content type="html"><![CDATA[<p>REST框架的<code>Request</code>类扩展了标准<code>HttpRequest</code>，增加了对REST框架的灵活请求解析和请求身份验证的支持。</p><a id="more"></a><h1 id="Requests"><a href="#Requests" class="headerlink" title="Requests"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#requests" target="_blank" rel="noopener">Requests</a></h1><blockquote><p>如果您正在做基于REST的Web服务…则应忽略request.POST。</p><p>— <a href="https://groups.google.com/d/topic/django-developers/dxI4qVzrBY4/discussion" target="_blank" rel="noopener">Django开发人员小组</a> Malcom Tredinnick</p></blockquote><p>REST框架的<code>Request</code>类扩展了标准<code>HttpRequest</code>，增加了对REST框架的灵活请求解析和请求身份验证的支持。</p><hr><h1 id="Request-解析"><a href="#Request-解析" class="headerlink" title="Request 解析"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#request-parsing" target="_blank" rel="noopener">Request 解析</a></h1><p>REST框架的Request对象提供了灵活的请求解析，使您能够以与通常处理表单数据相同的方式来处理JSON数据或其他媒体类型的请求。</p><h2 id="data"><a href="#data" class="headerlink" title=".data"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#data" target="_blank" rel="noopener">.data</a></h2><p><code>request.data</code>返回请求正文的解析内容。这类似于标准<code>request.POST</code>和<code>request.FILES</code>属性，除了：</p><ul><li>它包括所有已解析的内容，包括<em>文件和非文件</em>输入。</li><li>它支持解析除以外的HTTP方法的内容<code>POST</code>，这意味着您可以访问<code>PUT</code>和<code>PATCH</code>请求的内容。</li><li>它支持REST框架的灵活请求解析，而不仅仅是支持表单数据。例如，您可以以处理传入表单数据的相同方式处理传入JSON数据。</li></ul><p>有关更多详细信息，请参见<a href="https://www.django-rest-framework.org/api-guide/parsers/" target="_blank" rel="noopener">解析器文档</a>。</p><h2 id="query-params"><a href="#query-params" class="headerlink" title=".query_params"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#query_params" target="_blank" rel="noopener">.query_params</a></h2><p><code>request.query_params</code>是的更正确命名的同义词<code>request.GET</code>。</p><p>为了使代码内部更清晰，我们建议使用<code>request.query_params</code>，而不是Django的standard <code>request.GET</code>。这样做将有助于使您的代码库更加正确和明显-任何HTTP方法类型都可以包括查询参数，而不仅仅是<code>GET</code>请求。</p><h2 id="parsers"><a href="#parsers" class="headerlink" title=".parsers"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#parsers" target="_blank" rel="noopener">.parsers</a></h2><p>在<code>APIView</code>类或<code>@api_view</code>装饰将确保这个属性被自动设置为列表<code>Parser</code>实例的基础上，<code>parser_classes</code>对视图设置或基于该<code>DEFAULT_PARSER_CLASSES</code>设置。</p><p>您通常不需要访问此属性。</p><hr><p><strong>注意：</strong>如果客户端发送格式错误的内容，则访问<code>request.data</code>可能会引发<code>ParseError</code>。默认情况下，REST框架的<code>APIView</code>类或<code>@api_view</code>装饰器将捕获错误并返回<code>400 Bad Request</code>响应。</p><p>如果客户端发送的请求的内容类型无法解析，则将<code>UnsupportedMediaType</code>引发异常，默认情况下将捕获该异常并返回<code>415 Unsupported Media Type</code>响应。</p><hr><h1 id="内容协商"><a href="#内容协商" class="headerlink" title="内容协商"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#content-negotiation" target="_blank" rel="noopener">内容协商</a></h1><p>该请求公开了一些属性，使您可以确定内容协商阶段的结果。这使您可以实现一些行为，例如为不同的媒体类型选择不同的序列化方案。</p><h2 id="accepted-renderer"><a href="#accepted-renderer" class="headerlink" title=".accepted_renderer"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#accepted_renderer" target="_blank" rel="noopener">.accepted_renderer</a></h2><p>内容协商阶段选择的渲染器实例。</p><h2 id="accepted-media-type"><a href="#accepted-media-type" class="headerlink" title=".accepted_media_type"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#accepted_media_type" target="_blank" rel="noopener">.accepted_media_type</a></h2><p>一个字符串，表示内容协商阶段接受的媒体类型。</p><hr><h1 id="认证方式"><a href="#认证方式" class="headerlink" title="认证方式"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#authentication" target="_blank" rel="noopener">认证方式</a></h1><p>REST框架提供了灵活的按请求身份验证，使您能够：</p><ul><li>对API的不同部分使用不同的身份验证策略。</li><li>支持使用多种身份验证策略。</li><li>提供与传入请求关联的用户和令牌信息。</li></ul><h2 id="user"><a href="#user" class="headerlink" title=".user"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#user" target="_blank" rel="noopener">.user</a></h2><p><code>request.user</code>通常会返回的实例<code>django.contrib.auth.models.User</code>，尽管其行为取决于所使用的身份验证策略。</p><p>如果请求未经身份验证，则默认值为<code>request.user</code>的实例<code>django.contrib.auth.models.AnonymousUser</code>。</p><p>有关更多详细信息，请参见<a href="https://www.django-rest-framework.org/api-guide/authentication/" target="_blank" rel="noopener">身份验证文档</a>。</p><h2 id="auth"><a href="#auth" class="headerlink" title=".auth"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#auth" target="_blank" rel="noopener">.auth</a></h2><p><code>request.auth</code>返回任何其他身份验证上下文。的确切行为<code>request.auth</code>取决于所使用的身份验证策略，但通常可能是身份验证请求所依据的令牌的实例。</p><p>如果该请求是未认证的，或者如果没有附加上下文存在时，默认值<code>request.auth</code>是<code>None</code>。</p><p>有关更多详细信息，请参见<a href="https://www.django-rest-framework.org/api-guide/authentication/" target="_blank" rel="noopener">身份验证文档</a>。</p><h2 id="authenticators"><a href="#authenticators" class="headerlink" title=".authenticators"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#authenticators" target="_blank" rel="noopener">.authenticators</a></h2><p>在<code>APIView</code>类或<code>@api_view</code>装饰将确保这个属性被自动设置为列表<code>Authentication</code>实例的基础上，<code>authentication_classes</code>对视图设置或基于该<code>DEFAULT_AUTHENTICATORS</code>设置。</p><p>您通常不需要访问此属性。</p><hr><p><strong>注意：</strong><code>WrappedAttributeError</code>调用<code>.user</code>或<code>.auth</code>属性时，您可能会看到一个凸起。这些错误源自作为标准的身份验证器<code>AttributeError</code>，但是有必要将它们重新引发为其他异常类型，以防止外部属性访问抑制它们。Python不会识别出<code>AttributeError</code>源于身份验证器，而是会假设请求对象没有<code>.user</code>或<code>.auth</code>属性。身份验证器将需要固定。</p><hr><h1 id="浏览器增强"><a href="#浏览器增强" class="headerlink" title="浏览器增强"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#browser-enhancements" target="_blank" rel="noopener">浏览器增强</a></h1><p>REST框架支持的几个浏览器增强功能，例如基于浏览器的<code>PUT</code>，<code>PATCH</code>和<code>DELETE</code>形式。</p><h2 id="method"><a href="#method" class="headerlink" title=".method"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#method" target="_blank" rel="noopener">.method</a></h2><p><code>request.method</code>返回请求的HTTP方法的<strong>大写</strong>字符串表示形式。</p><p>基于浏览器的<code>PUT</code>，<code>PATCH</code>而<code>DELETE</code>形式是透明的支持。</p><p>有关更多信息，请参阅<a href="https://www.django-rest-framework.org/topics/browser-enhancements/" target="_blank" rel="noopener">浏览器增强功能文档</a>。</p><h2 id="content-type"><a href="#content-type" class="headerlink" title=".content_type"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#content_type" target="_blank" rel="noopener">.content_type</a></h2><p><code>request.content_type</code>，返回代表HTTP请求主体的媒体类型的字符串对象，如果未提供媒体类型，则返回空字符串。</p><p>通常，您通常不需要直接访问请求的内容类型，因为您通常将依赖于REST框架的默认请求解析行为。</p><p>如果确实需要访问请求的内容类型，则应<code>.content_type</code>优先使用属性而不是using <code>request.META.get(&#39;HTTP_CONTENT_TYPE&#39;)</code>，因为它为基于浏览器的非格式内容提供了透明的支持。</p><p>有关更多信息，请参阅<a href="https://www.django-rest-framework.org/topics/browser-enhancements/" target="_blank" rel="noopener">浏览器增强功能文档</a>。</p><h2 id="stream"><a href="#stream" class="headerlink" title=".stream"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#stream" target="_blank" rel="noopener">.stream</a></h2><p><code>request.stream</code> 返回表示请求正文内容的流。</p><p>通常，您通常不需要直接访问请求的内容，因为您通常会依赖REST框架的默认请求解析行为。</p><hr><h1 id="标准HttpRequest属性"><a href="#标准HttpRequest属性" class="headerlink" title="标准HttpRequest属性"></a><a href="https://www.django-rest-framework.org/api-guide/requests/#standard-httprequest-attributes" target="_blank" rel="noopener">标准HttpRequest属性</a></h1><p>随着REST框架对<code>Request</code>Django 的扩展<code>HttpRequest</code>，所有其他标准属性和方法也都可用。例如<code>request.META</code>和<code>request.session</code>字典可以正常使用。</p><p>请注意，由于实现原因，<code>Request</code>该类不继承自<code>HttpRequest</code>类，而是使用composition扩展了该类。</p>]]></content>
      
      
      <categories>
          
          <category> Django </category>
          
          <category> Django-Rest-framework </category>
          
      </categories>
      
      
        <tags>
            
            <tag> restful </tag>
            
            <tag> request </tag>
            
            <tag> Django </tag>
            
            <tag> Django-Rest-framework </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kubernetes:Ingress的使用</title>
      <link href="/blog/2020-01-06-Ingress%E7%9A%84%E4%BD%BF%E7%94%A8.html"/>
      <url>/blog/2020-01-06-Ingress%E7%9A%84%E4%BD%BF%E7%94%A8.html</url>
      
        <content type="html"><![CDATA[<h1 id="ingress的基本使用"><a href="#ingress的基本使用" class="headerlink" title="ingress的基本使用"></a>ingress的基本使用</h1><p><a href="https://kubernetes.github.io/ingress-nginx/deploy/#bare-metal" target="_blank" rel="noopener">nginx ingress官网</a></p><p><a href="https://kubernetes.io/docs/concepts/services-networking/ingress/" target="_blank" rel="noopener">kubernetes ingress介绍</a></p><p><code>ingress</code>相当于<code>nginx</code>代理服务，在定义 <code>Ingress</code>策略之前，需要先部署<code>Ingress Controller</code>，以实现为所有后端 <code>Service</code> 提供一个统一的入口。</p><h1 id="一、使用官网例子"><a href="#一、使用官网例子" class="headerlink" title="一、使用官网例子"></a>一、使用官网例子</h1><h2 id="1、创建ingressContr-oller"><a href="#1、创建ingressContr-oller" class="headerlink" title="1、创建ingressContr=oller"></a>1、创建<code>ingressContr=oller</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml</span><br></pre></td></tr></table></figure><p><code>mandatory.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-configuration</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tcp-services</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">udp-services</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-clusterrole</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">events</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"extensions"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"networking.k8s.io"</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"extensions"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"networking.k8s.io"</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingresses/status</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-role</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">    <span class="attr">resourceNames:</span></span><br><span class="line">      <span class="comment"># Defaults to "&lt;election-id&gt;-&lt;ingress-class&gt;"</span></span><br><span class="line">      <span class="comment"># Here: "&lt;ingress-controller-leader&gt;-&lt;nginx&gt;"</span></span><br><span class="line">      <span class="comment"># This has to be adapted if you change either parameter</span></span><br><span class="line">      <span class="comment"># when launching the nginx-ingress-controller.</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"ingress-controller-leader-nginx"</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-role-nisa-binding</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-role</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-clusterrole-nisa-binding</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-clusterrole</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">prometheus.io/port:</span> <span class="string">"10254"</span></span><br><span class="line">        <span class="attr">prometheus.io/scrape:</span> <span class="string">"true"</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.0</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--publish-service=$(POD_NAMESPACE)/ingress-nginx</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">drop:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">              <span class="attr">add:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">            <span class="comment"># www-data -&gt; 33</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">33</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h2 id="2、创建service"><a href="#2、创建service" class="headerlink" title="2、创建service"></a>2、创建<code>service</code></h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/baremetal/service-nodeport.yaml</span><br></pre></td></tr></table></figure><p><code>service-nodeport.yaml</code></p><p>使用<code>NodePort</code>的方式</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><ul><li>查看pod和service</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ~]# kubectl get all -n ingress-nginx</span><br><span class="line">NAME                                            READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod/nginx-ingress-controller-86449c74bb-4npwg   1/1     Running   0          54s</span><br><span class="line"></span><br><span class="line">NAME                    TYPE       CLUSTER-IP      EXTERNAL-IP   PORT(S)                     AGE</span><br><span class="line">service/ingress-nginx   NodePort   10.111.19.182   &lt;none&gt;        80:9861/TCP,443:59639/TCP   43s</span><br><span class="line"></span><br><span class="line">NAME                                       READY   UP-TO-DATE   AVAILABLE   AGE</span><br><span class="line">deployment.apps/nginx-ingress-controller   1/1     1            1           54s</span><br><span class="line"></span><br><span class="line">NAME                                                  DESIRED   CURRENT   READY   AGE</span><br><span class="line">replicaset.apps/nginx-ingress-controller-86449c74bb   1         1         1       54s</span><br></pre></td></tr></table></figure><p><strong>提示：service 没有特地绑定node端口，通过service可知nodeport为9861，后面的http访问都要使用这个端口</strong></p><ul><li>通过浏览器访问<code>节点ip:9861</code>返回404则证明创建成功</li></ul><h2 id="3、创建backend"><a href="#3、创建backend" class="headerlink" title="3、创建backend"></a>3、创建<code>backend</code></h2><p>我们需要一个后端服务，通过ingress转发后端服务</p><p><code>myweb-tomcat.yaml</code></p><p><code>service</code>使用<code>ClusterIP</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span>  <span class="string">myweb</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span>  <span class="string">myweb</span></span><br><span class="line">    <span class="attr">version:</span> <span class="string">v1.1.1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span>  <span class="string">tomcat:8.0</span></span><br><span class="line">        <span class="attr">name:</span>  <span class="string">myweb</span>    </span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span>  <span class="number">8080</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">            <span class="comment"># Uncomment the following line to manually specify Kubernetes API server Host          </span></span><br><span class="line">            <span class="comment"># If not specified, Dashboard will attempt to auto discover the API server and connect</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">labels:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">#默认为type: ClusterIP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><h2 id="4、创建对应的ingress"><a href="#4、创建对应的ingress" class="headerlink" title="4、创建对应的ingress"></a>4、创建对应的<code>ingress</code></h2><p>通过该<code>ingress</code>转发刚刚创建的<code>backend</code></p><p>提示：``kubernetes<code>官网中</code>apiVersion<code>使用的是</code>networking.k8s.io/v1beta1<code>，</code>ingress<code>官网使用</code>extensions/v1beta1`</p><p><code>tomcat-ingress.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">"nginx"</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.test.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><ul><li>查看创建是否成功</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master mytest]# kubectl get ing -n ingress-nginx</span><br><span class="line">NAME             HOSTS             ADDRESS   PORTS   AGE</span><br><span class="line">tomcat-ingress   tomcat.test.com             80      23s</span><br><span class="line">[root@k8s-master mytest]# kubectl get pod -n ingress-nginx</span><br><span class="line">NAME                                        READY   STATUS    RESTARTS   AGE</span><br><span class="line">myweb-55c44c498d-95pvw                      1/1     Running   0          17s</span><br><span class="line">nginx-ingress-controller-86449c74bb-4npwg   1/1     Running   0          20m</span><br><span class="line">[root@k8s-master mytest]# kubectl get svc</span><br><span class="line">NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">kubernetes   ClusterIP   10.96.0.1    &lt;none&gt;        443/TCP   22d</span><br></pre></td></tr></table></figure><h2 id="5、测试"><a href="#5、测试" class="headerlink" title="5、测试"></a>5、测试</h2><ul><li>因为绑定的域名为<code>tomcat.test.com</code>，所以需要现在<code>/etc/hosts</code>绑定域名</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1         localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">172.25.21.66 k8s-master  tomcat.test.com</span><br></pre></td></tr></table></figure><ul><li>访问测试</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master mytest]# curl -I tomcat.test.com:9861</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 06:23:16 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br></pre></td></tr></table></figure><p>返回预期内容，创建成功</p><ul><li>局域网访问</li></ul><p>win中添加DNS</p><p>在该文件<code>C:\Windows\System32\drivers\etc\hosts</code>最后一行中添加<code>172.25.21.66  tomcat.test.com</code></p><p>现在就可以通过浏览器使用域名tomcat.test.com访问了</p><h2 id="6、问题"><a href="#6、问题" class="headerlink" title="6、问题"></a>6、问题</h2><p>但是有个问题，通过<code>node</code>节点<code>IP</code>不能成功，<code>myweb</code>的集群<code>IP</code>可以访问</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master mytest]# curl -I 172.25.21.66:9861</span><br><span class="line">HTTP/1.1 404 Not Found</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 06:24:27 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 159</span><br><span class="line">Connection: keep-alive</span><br><span class="line"></span><br><span class="line">[root@k8s-master mytest]# curl -I 10.99.77.4</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: Apache-Coyote/1.1</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Transfer-Encoding: chunked</span><br><span class="line">Date: Thu, 08 Aug 2019 06:26:25 GMT</span><br></pre></td></tr></table></figure><h2 id="7、解决方法"><a href="#7、解决方法" class="headerlink" title="7、解决方法"></a>7、解决方法</h2><p>直接使用<code>http</code>，没有<code>host</code></p><p><code>apiVersion</code>使用<code>networking.k8s.io/v1beta1</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">name-virtual-host-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.test.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master tomcat]# curl -I 172.25.21.66</span><br><span class="line">HTTP/1.1 308 Permanent Redirect</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 08:28:08 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 177</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Location: https://172.25.21.66/</span><br><span class="line"></span><br><span class="line">[root@k8s-master tomcat]# curl -Ik https://172.25.21.66  #使用https访问</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 08:37:24 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Strict-Transport-Security: max-age=15724800; includeSubDomains</span><br></pre></td></tr></table></figure><p>注意：使用无域名的Ingress转发规则时，将默认禁用非安全HTTP,强制启用<code>HTTPS</code>.  可以在Ingress的定义中设置一个 <code>annotation: nginx.ingress.kubernetes.io/ssl-redirect=&quot;false&quot;&quot;</code> 来关闭强制启用<code>HTTPS</code>的设置。</p><p>例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">name-virtual-host-ingress</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/ssl-redirect:</span> <span class="string">"false"</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.test.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><h1 id="二、修改后方式"><a href="#二、修改后方式" class="headerlink" title="二、修改后方式"></a>二、修改后方式</h1><p><strong>因为官网例子没有使用node节点的80和443端口，所以我们需要自己修改</strong></p><p><strong>提示：<code>kubelet</code>默认开发的端口是没有80的，需要修改配置</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/kubernetes/manifests/kube-apiserver.yaml</span><br><span class="line"></span><br><span class="line">    - --service-account-key-file=/etc/kubernetes/pki/sa.pub</span><br><span class="line">    - --service-cluster-ip-range=10.96.0.0/12</span><br><span class="line">    - --service-node-port-range=1-65535  #添加该选项开放使用端口，然后重启kubelet</span><br><span class="line">    - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt</span><br></pre></td></tr></table></figure><p><code>ingressController</code>的修改，主要修改<code>Deployment</code>，<code>Deployment</code>可以改为<code>DaemonSet</code>。这里就贴出<code>Deployment</code>部分内容，其他和上面一样</p><h2 id="1、改为hostPort"><a href="#1、改为hostPort" class="headerlink" title="1、改为hostPort"></a>1、改为<code>hostPort</code></h2><p>提示：这里不需要创建<code>ingressController</code>的<code>service</code></p><p><code>mandatory.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">prometheus.io/port:</span> <span class="string">"10254"</span></span><br><span class="line">        <span class="attr">prometheus.io/scrape:</span> <span class="string">"true"</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.0</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--publish-service=$(POD_NAMESPACE)/ingress-nginx</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">drop:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">              <span class="attr">add:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">            <span class="comment"># www-data -&gt; 33</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">33</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">hostPort:</span> <span class="number">80</span>  <span class="comment">#修改为hostPort</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">              <span class="attr">hostPort:</span> <span class="number">443</span>  <span class="comment">#修改为hostPort</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>测试成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ingree-controller]# curl -I tomcat.test.com</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 06:44:05 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br></pre></td></tr></table></figure><p>需要说明的是，客户端只能通过域名 <code>tomcat.test.com</code>访问服务，这时要求客户端或者 DNS 能够将 <code>tomcat.test.com</code>域名解析到后端多个<code>Node</code> 的真实 <code>IP</code> 地址上。</p><p>通过 curl 访问 <code>tomcat.test.com</code> 提供的服务（可以用 –resolve 参数模拟 <code>DNS</code> 解析，目标地址为域名；也可以用<code>-H &#39;HOST:tomcat.test.com&#39;</code>参数设置 HTTP 投中要访问的域名，目标地址为 <code>IP</code> 地址），可以得到<code>myweb</code>返回的网页内容。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --resolve tomcat.test.com:172.25.21.66 http://tomcat.test.com/</span><br><span class="line"><span class="meta">#</span><span class="bash">或者curl -H <span class="string">'Host:tomcat.test.com'</span> http://172.25.21.66/</span></span><br></pre></td></tr></table></figure><h2 id="2、-改为hostNetwork"><a href="#2、-改为hostNetwork" class="headerlink" title="2、 改为hostNetwork"></a>2、 改为<code>hostNetwork</code></h2><p>提示：这里不需要创建<code>ingressController</code>的<code>service</code></p><p><code>mandatory.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">prometheus.io/port:</span> <span class="string">"10254"</span></span><br><span class="line">        <span class="attr">prometheus.io/scrape:</span> <span class="string">"true"</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span> <span class="comment">#改为hostNetwork</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.0</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--publish-service=$(POD_NAMESPACE)/ingress-nginx</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">drop:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">              <span class="attr">add:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">            <span class="comment"># www-data -&gt; 33</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">33</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br></pre></td></tr></table></figure><p>测试成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ingree-controller]# curl -I tomcat.test.com</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 06:50:46 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br></pre></td></tr></table></figure><h1 id="三、ingress使用其他使用"><a href="#三、ingress使用其他使用" class="headerlink" title="三、ingress使用其他使用"></a>三、ingress使用其他使用</h1><h2 id="1、一个域名多个路径"><a href="#1、一个域名多个路径" class="headerlink" title="1、一个域名多个路径"></a>1、一个域名多个路径</h2><p><strong>注意需要添加的<code>annotations</code></strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">simple-fanout-example</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">foo.bar.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/foo</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">service1</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">4200</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/bar</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">service2</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><p>示例：</p><p><code>myweb2-tomcat.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span>  <span class="string">myweb2</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span>  <span class="string">myweb2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">myweb2</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">myweb2</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span>  <span class="string">tomcat:8.0</span></span><br><span class="line">        <span class="attr">name:</span>  <span class="string">myweb2</span>    </span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span>  <span class="number">8080</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">args:</span></span><br><span class="line">            <span class="comment"># Uncomment the following line to manually specify Kubernetes API server Host          </span></span><br><span class="line">            <span class="comment"># If not specified, Dashboard will attempt to auto discover the API server and connect</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">30</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">30</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myweb2</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span> </span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment">#默认为type: ClusterIP</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">myweb2</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">8080</span></span><br></pre></td></tr></table></figure><p><code>tomcat-ingress.yaml</code></p><p><strong>注意需要添加的<code>annotations</code></strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.test.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/foo</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/bar</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb2</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/demo</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master tomcat]# curl -Ik http://tomcat.test.com/foo</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 09:06:55 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line"></span><br><span class="line">[root@k8s-master tomcat]# curl -Ik http://tomcat.test.com/bar</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 09:07:00 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line"></span><br><span class="line">[root@k8s-master tomcat]# curl -Ik https://tomcat.test.com/foo</span><br><span class="line">HTTP/1.1 404 Not Found</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 09:07:04 GMT</span><br><span class="line">Content-Type: text/html;charset=utf-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Content-Language: en</span><br><span class="line">Strict-Transport-Security: max-age=15724800; includeSubDomains</span><br><span class="line"></span><br><span class="line">[root@k8s-master tomcat]# curl -Ik  https://172.25.21.66</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 09:09:37 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Strict-Transport-Security: max-age=15724800; includeSubDomains</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@k8s-master ingress]# curl -Ik https://172.25.21.66/demo</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Fri, 09 Aug 2019 01:45:44 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Strict-Transport-Security: max-age=15724800; includeSubDomains</span><br><span class="line"></span><br><span class="line">[root@k8s-master ingress]# curl -Ik http://172.25.21.66/demo</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Fri, 09 Aug 2019 01:45:48 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br></pre></td></tr></table></figure><p>这里有个问题：通过域名使用<code>https</code>访问会返回404错误，而通过<code>IP</code>使用<code>https</code>访问则不会有这种错误</p><p>原因：使用https访问相当于使用IP访问，访问<a href="https://tomcat.test.com/foo等于访问https://172.25.21.66/foo，因为IP访问的配置没有`/foo`，所有返回404。可以通过配置TLS安全设置以实现https访问域名的功能。" target="_blank" rel="noopener">https://tomcat.test.com/foo等于访问https://172.25.21.66/foo，因为IP访问的配置没有`/foo`，所有返回404。可以通过配置TLS安全设置以实现https访问域名的功能。</a></p><h2 id="2、多个域名"><a href="#2、多个域名" class="headerlink" title="2、多个域名"></a>2、多个域名</h2><p><code>tomcat-ingress.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">name-virtual-host-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">foo.bar.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">service1</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">bar.foo.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">service2</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p><code>tomcat-ingress.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">name-virtual-host-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">first.bar.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">service1</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">second.foo.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">service2</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">service3</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><ul><li>示例1</li></ul><p><code>tomcat-ingress.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">extensions/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">kubernetes.io/ingress.class:</span> <span class="string">"nginx"</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.test.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span> </span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.nedy.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb2</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>测试</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master tomcat]# curl -I tomcat.test.com</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 08:18:51 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line"></span><br><span class="line">[root@k8s-master tomcat]# curl -I tomcat.nedy.com</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 08:19:11 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br></pre></td></tr></table></figure><ul><li>示例2</li></ul><p><code>tomcat-ingress.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tomcat-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.test.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.nedy.com</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb2</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">myweb3</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@k8s-master</span> <span class="string">tomcat]#</span> <span class="string">curl</span> <span class="string">-I</span> <span class="string">tomcat.nedy.com</span> <span class="comment">#可以使用https，这样相当于IP访问</span></span><br><span class="line"><span class="string">HTTP/1.1</span> <span class="number">200</span> <span class="string">OK</span></span><br><span class="line"><span class="attr">Server:</span> <span class="string">openresty/1.15.8.1</span></span><br><span class="line"><span class="attr">Date:</span> <span class="string">Thu,</span> <span class="number">08</span> <span class="string">Aug</span> <span class="number">2019</span> <span class="number">08</span><span class="string">:27:56</span> <span class="string">GMT</span></span><br><span class="line"><span class="attr">Content-Type:</span> <span class="string">text/html;charset=UTF-8</span></span><br><span class="line"><span class="attr">Connection:</span> <span class="string">keep-alive</span></span><br><span class="line"><span class="attr">Vary:</span> <span class="string">Accept-Encoding</span></span><br><span class="line"></span><br><span class="line"><span class="string">[root@k8s-master</span> <span class="string">tomcat]#</span> <span class="string">curl</span> <span class="string">-I</span> <span class="string">tomcat.test.com</span> </span><br><span class="line"><span class="string">HTTP/1.1</span> <span class="number">200</span> <span class="string">OK</span></span><br><span class="line"><span class="attr">Server:</span> <span class="string">openresty/1.15.8.1</span></span><br><span class="line"><span class="attr">Date:</span> <span class="string">Thu,</span> <span class="number">08</span> <span class="string">Aug</span> <span class="number">2019</span> <span class="number">08</span><span class="string">:27:58</span> <span class="string">GMT</span></span><br><span class="line"><span class="attr">Content-Type:</span> <span class="string">text/html;charset=UTF-8</span></span><br><span class="line"><span class="attr">Connection:</span> <span class="string">keep-alive</span></span><br><span class="line"><span class="attr">Vary:</span> <span class="string">Accept-Encoding</span></span><br><span class="line"></span><br><span class="line"><span class="string">[root@k8s-master</span> <span class="string">tomcat]#</span> <span class="string">curl</span> <span class="string">-I</span> <span class="number">172.25</span><span class="number">.21</span><span class="number">.66</span></span><br><span class="line"><span class="string">HTTP/1.1</span> <span class="number">308</span> <span class="string">Permanent</span> <span class="string">Redirect</span></span><br><span class="line"><span class="attr">Server:</span> <span class="string">openresty/1.15.8.1</span></span><br><span class="line"><span class="attr">Date:</span> <span class="string">Thu,</span> <span class="number">08</span> <span class="string">Aug</span> <span class="number">2019</span> <span class="number">08</span><span class="string">:28:08</span> <span class="string">GMT</span></span><br><span class="line"><span class="attr">Content-Type:</span> <span class="string">text/html</span></span><br><span class="line"><span class="attr">Content-Length:</span> <span class="number">177</span></span><br><span class="line"><span class="attr">Connection:</span> <span class="string">keep-alive</span></span><br><span class="line"><span class="attr">Location:</span> <span class="string">https://172.25.21.66/</span></span><br><span class="line"></span><br><span class="line"><span class="string">[root@k8s-master</span> <span class="string">tomcat]#</span> <span class="string">curl</span> <span class="string">-Ik</span> <span class="string">https://172.25.21.66</span>  <span class="comment">#可以使用https，和https://tomcat.nedy.com效果相同</span></span><br><span class="line"><span class="string">HTTP/1.1</span> <span class="number">200</span> <span class="string">OK</span></span><br><span class="line"><span class="attr">Server:</span> <span class="string">openresty/1.15.8.1</span></span><br><span class="line"><span class="attr">Date:</span> <span class="string">Thu,</span> <span class="number">08</span> <span class="string">Aug</span> <span class="number">2019</span> <span class="number">08</span><span class="string">:37:24</span> <span class="string">GMT</span></span><br><span class="line"><span class="attr">Content-Type:</span> <span class="string">text/html;charset=UTF-8</span></span><br><span class="line"><span class="attr">Connection:</span> <span class="string">keep-alive</span></span><br><span class="line"><span class="attr">Vary:</span> <span class="string">Accept-Encoding</span></span><br><span class="line"><span class="attr">Strict-Transport-Security:</span> <span class="string">max-age=15724800;</span> <span class="string">includeSubDomains</span></span><br></pre></td></tr></table></figure><h1 id="四、Ingress的TLS安全设置"><a href="#四、Ingress的TLS安全设置" class="headerlink" title="四、Ingress的TLS安全设置"></a>四、<code>Ingress</code>的<code>TLS</code>安全设置</h1><p>对于使用<code>https</code>设置<code>TLS</code>的安全证书方面，Ingress 也可以支持。<br>通过以下步骤进行设置：</p><ul><li>创建自签名的密钥和<code>SSL</code>证书文件</li><li>将证书保存到<code>Kubernetes</code>中的一个<code>Secre</code>t资源对象上。</li><li>将该<code>Secret</code>对象设置到<code>Ingress</code>中。</li></ul><p>创建<code>Secret</code></p><p><code>secret.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">testsecret-tls</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">tls.crt:</span> <span class="string">base64</span> <span class="string">encoded</span> <span class="string">cert</span>  <span class="comment"># cert 文件内容</span></span><br><span class="line">  <span class="attr">tls.key:</span> <span class="string">base64</span> <span class="string">encoded</span> <span class="string">key</span>   <span class="comment"># key 文件内容</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">kubernetes.io/tls</span></span><br></pre></td></tr></table></figure><p>在<code>Ingress</code>中引用 <code>Secret</code>:</p><p><code>secret-ingress.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tls-example-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">sslexample.foo.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">testsecret-tls</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">sslexample.foo.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">service1</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>示例：</p><h2 id="1、创建证书"><a href="#1、创建证书" class="headerlink" title="1、创建证书"></a>1、创建证书</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout rsa_private.key -out cret.crt -subj "/CN=tomcat.nedy.com/O=vihoo"</span><br></pre></td></tr></table></figure><p>如果提供服务的网站不止一个域名，例如前面的第 3 中<code>Ingress</code>策略配置方式，则 <code>SSL</code>证书需要使用额外的一个 <code>x509 v3</code> 配置文件辅助完成，在[alt_names] 段中完成多个<code>DNS</code>域名的设置：</p><p><code>/etc/ssl/openssl.cnf</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`...``[alt_names]``DNS.1 = mywebsite.com``DNS.2 = mywebsite2.com`</span><br></pre></td></tr></table></figure><p>然后使用 OpenSSl 工具完成秘钥和证书的创建。</p><p>1) 首先完成自签名 CA 证书：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`$ openssl genrsa -out ca.key 2048``Generating RSA private key, 2048 bit long modulus``..........+++``................................................+++``e is 65537 (0x10001)`` ` `$ openssl req -x509 -new -nodes -key ca.key -days 5000 -out ca.crt -subj ``"/CN=mywebsite.com"`</span><br></pre></td></tr></table></figure><p>2) 基于 <code>openssl.cnf</code>和<code>ca</code> 证书生成<code>ingress SSL</code> 证书：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`$ openssl genrsa -out ingress.key 2048``Generating RSA private key, 2048 bit long modulus``.................................+++``..............................................................................................+++``e is 65537 (0x10001)`` ` `$ openssl req -new -key ingress.key -out ingress.csr -subj ``"/CN=mywebsite.com"` `-config ``/etc/ssl/openssl``.cnf`` ` `$ openssl x509 -req -``in` `ingress.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out ingress.crt -days 5000 -extensions v3_req -extfile ``/etc/ssl/openssl``.cnf``Signature ok``subject=``/CN``=mywebsite.com``Getting CA Private Key`</span><br></pre></td></tr></table></figure><h2 id="2、创建secret"><a href="#2、创建secret" class="headerlink" title="2、创建secret"></a>2、创建<code>secret</code></h2><p><code>secret.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">testsecret-tls</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">tls.crt:</span>  <span class="string">|</span></span><br><span class="line">    <span class="string">MIIDJzCCAg+gAwIBAgIJAOpo5VvpwbsbMA0GCSqGSIb3DQEBCwUAMCoxGDAWBgNV</span></span><br><span class="line">    <span class="string">BAMMD3RvbWNhdC5uZWR5LmNvbTEOMAwGA1UECgwFdmlob28wHhcNMTkwODA4MTAx</span></span><br><span class="line">    <span class="string">MTI3WhcNMjAwODA3MTAxMTI3WjAqMRgwFgYDVQQDDA90b21jYXQubmVkeS5jb20x</span></span><br><span class="line">    <span class="string">DjAMBgNVBAoMBXZpaG9vMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA</span></span><br><span class="line">    <span class="string">qJYVO48OujM/ScRAZXyuuNZocIhwsaq25xTCeyVfF41C3Mjjb3ATnIQQjkOKlfMs</span></span><br><span class="line">    <span class="string">AduZoQjnliHjOdaQIBvSrl+SDKpnND3lrFtiJA+pvPB7A6IXXeOZ0FmNFy/VIk1X</span></span><br><span class="line">    <span class="string">2e1lDNQpBQdr/uVFLeNFpeqBizaZ5m6BnI3OXmeSOzxnEvhMyKAs4LMi4yDpuf+t</span></span><br><span class="line">    <span class="string">VKaMrBmzdIGVsm0J+Pq+5igfLIodnJ6bYMaXrA1bx00LyvBfq8JX1Vi6tdL9u8L6</span></span><br><span class="line">    <span class="string">iiyUCsubHvxx9NrB+x7dIkCJ4ppG7Z2PyhihTHrgFhIupHmusYOubuVVHcr/BPdZ</span></span><br><span class="line">    <span class="string">RDh6C5mQrERcVZeHrE2RBwIDAQABo1AwTjAdBgNVHQ4EFgQUmeqpqaCMVEFDQpSV</span></span><br><span class="line">    <span class="string">d486Q2jtT8MwHwYDVR0jBBgwFoAUmeqpqaCMVEFDQpSVd486Q2jtT8MwDAYDVR0T</span></span><br><span class="line">    <span class="string">BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAlbLlvRimWAmPORZ0q7u1YUIygBBs</span></span><br><span class="line">    <span class="string">AZeXXhNPjiWoU5o8lG/Ic8OfnQp++rnfyW+YNehoapLcOgIdS9yMZnegi6s+RW4H</span></span><br><span class="line">    <span class="string">0OAlGg5WC+/gwsVMWuzziAf4YJQBQCKtA6UbZTG/kk/9kDue9yMD6Fx4t68KGO05</span></span><br><span class="line">    <span class="string">rvt6TZIFlgrzwPSa8jHgboZonlV7/62fRRaGDGLOnv/ip6eBup4Gl3L5UTm8VZqf</span></span><br><span class="line">    <span class="string">UGADwwXXXE/p5Zeox16bNkPDQAp5AoeMpTZ6tZQmRsx4/L3xX2qLtj4u7Xrdp8vF</span></span><br><span class="line">    <span class="string">uA6TFeKpdjag9mljZu798iHjedUF5T8QK20/3mPgSiz6mLNACqxAqKaoBw==</span></span><br><span class="line">  <span class="attr">tls.key:</span>  <span class="string">|</span></span><br><span class="line">    <span class="string">MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQColhU7jw66Mz9J</span></span><br><span class="line">    <span class="string">xEBlfK641mhwiHCxqrbnFMJ7JV8XjULcyONvcBOchBCOQ4qV8ywB25mhCOeWIeM5</span></span><br><span class="line">    <span class="string">1pAgG9KuX5IMqmc0PeWsW2IkD6m88HsDohdd45nQWY0XL9UiTVfZ7WUM1CkFB2v+</span></span><br><span class="line">    <span class="string">5UUt40Wl6oGLNpnmboGcjc5eZ5I7PGcS+EzIoCzgsyLjIOm5/61UpoysGbN0gZWy</span></span><br><span class="line">    <span class="string">bQn4+r7mKB8sih2cnptgxpesDVvHTQvK8F+rwlfVWLq10v27wvqKLJQKy5se/HH0</span></span><br><span class="line">    <span class="string">2sH7Ht0iQInimkbtnY/KGKFMeuAWEi6kea6xg65u5VUdyv8E91lEOHoLmZCsRFxV</span></span><br><span class="line">    <span class="string">l4esTZEHAgMBAAECggEASvD0nVY5uMIBNzx7V+H2FYqSQLwWRJRb3BtZXL6/J8wO</span></span><br><span class="line">    <span class="string">1fCjUa1jumbmqScTGxdPD8Bb6b74m7+Sr+pWhT95BzTKysCRQiLlzxmMZfVkge3w</span></span><br><span class="line">    <span class="string">8SuD8aO0g27bjlwgBbCWBfVGv04sseSbuGKYvw5RrrCxR35NKackDMDo5QRrd9Lo</span></span><br><span class="line">    <span class="string">VBe//2OW2piAUq56Ln3mU4+F6+NFhjbwxpc2tCqI8HMqqb1Pg5dE2FGw801OCyoX</span></span><br><span class="line">    <span class="string">38gPqKutaJA3eGzw1S0Re866FBf/FYyjmV1oPNW0wrBP2/SqBIVWDLDNINeK3JnF</span></span><br><span class="line">    <span class="string">3LyB7rj7Ve0zeSM44moIloPvgzq1Yj0TE94jIFBAwQKBgQDSYt3zATv7QXX/MUtq</span></span><br><span class="line">    <span class="string">1tGPii3ZgPCYvCyY2vrxOktgDsIYA426u8HqDbMXKR0kED/mMP7OfJaISt6wYZBB</span></span><br><span class="line">    <span class="string">8sN7vSb1ewq6a4s7wfI6XE3jDgx+b8MwNnPS5be66L8QHNcsHkONbDthFbt0X6I6</span></span><br><span class="line">    <span class="string">qxYQAkXthfJ/iAdn+6YYP/YaoQKBgQDNIy43zBZhWlon4DTLg0ilk6hgHcjcxjG5</span></span><br><span class="line">    <span class="string">cD02Ucy4FdBPJ7iC0i4w4Ca+aL//ruVC1DZyYN57XYq1o/LvFZSBGq6gUhDm6KSU</span></span><br><span class="line">    <span class="string">tMILgbIcVkq2CuiKX0K90IVDaji3rOqIJeZIZf1NWV6o3IohQyOl0Wvx7Qh3+Ijv</span></span><br><span class="line">    <span class="string">dROMK9bypwKBgCYNt/OST5UcvAkSk3+Zp4H9Dln/FoWp0686PJWRY7zWLolFa0dR</span></span><br><span class="line">    <span class="string">WrvJCpGv4BN71PL//ba/lkLEuA7TNtKW5IDnL7rLLJ+XgDGo3PVtaLEfA2eDM5zu</span></span><br><span class="line">    <span class="string">3HhTEK6AFr8FWG4kczeLUho3YhakjaVq+KygnKFfzwL+ScinHd3ZA9zBAoGAJfo+</span></span><br><span class="line">    <span class="string">YzwYZJual0lN3OOIPocwo+K/vge/Sup5mqXYNbhsIUtkQGvy+z90TMoNyaMydIXf</span></span><br><span class="line">    <span class="string">Mpu2dLZjqK8amaKwJJqw+6NV17n4RkOUrRasx8w99qfcV0m9jHCfS1TN/Us4/E2v</span></span><br><span class="line">    <span class="string">7XVcSMaj3LU/qVrJrbgwuNA+Qh+0EkjlfozbNX8CgYEAmFyHG68VMoqF0Hn0I0as</span></span><br><span class="line">    <span class="string">YqHaIJywR/1lNB2eZ5zYrloofkI7uUDOZuB2Ba2TS7ToAIRcJ/0/XoW8hBqh/k7o</span></span><br><span class="line">    <span class="string">b9s/DjA6oIW6MlCTscjy6abJx2cEoJ5G3yoBQJBwAWgw/chn6LqzkcSRUQ48cvC2</span></span><br><span class="line">    <span class="string">FKePkp+hdszfelaG4ampaYI=</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">kubernetes.io/tls</span></span><br></pre></td></tr></table></figure><p>还可以这样创建secret：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl create secret tls testsecret-tls --key  tls.key --cert tls.crt -n ingress-nginx</span><br></pre></td></tr></table></figure><h2 id="3、在Ingress中引用-Secret"><a href="#3、在Ingress中引用-Secret" class="headerlink" title="3、在Ingress中引用 Secret"></a>3、在<code>Ingress</code>中引用 <code>Secret</code></h2><p><code>secret-ingress.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tomcat.nedy.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">testsecret-tls</span> <span class="comment">#默认ingress controller证书将该句注释掉</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.nedy.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>注意这里</p><h2 id="4、访问测试"><a href="#4、访问测试" class="headerlink" title="4、访问测试"></a>4、访问测试</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master tomcat]# curl -Ik http://tomcat.nedy.com  </span><br><span class="line">HTTP/1.1 308 Permanent Redirect  </span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 11:04:42 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 177</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Location: https://tomcat.nedy.com/  #会重定向到 https://tomcat.nedy.com</span><br><span class="line"></span><br><span class="line">[root@k8s-master tomcat]# curl -Ik https://tomcat.nedy.com</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Thu, 08 Aug 2019 11:04:46 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Strict-Transport-Security: max-age=15724800; includeSubDomains</span><br></pre></td></tr></table></figure><h2 id="5、其他"><a href="#5、其他" class="headerlink" title="5、其他"></a>5、其他</h2><ul><li>创建证书和<code>secret</code></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl req -x509 -nodes -days 5000 -newkey rsa:2048 -keyout tls.key -out tls.crt -subj "/CN=tomcat.test.com"</span><br><span class="line">kubectl create secret tls testsecret-tls -n ingress-nginx --key tls.key --cert tls.crt</span><br></pre></td></tr></table></figure><ul><li>使用</li></ul><p><code>secret-ingress.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tomcat.test.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">testsecret-tls</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.test.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/bar</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb2</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.nedy.com</span>   <span class="comment">#这里我没有配置该域名AC也可以通过https访问</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/bar</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb2</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ingress]# curl -Ik https://tomcat.test.com</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Fri, 09 Aug 2019 02:46:57 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Strict-Transport-Security: max-age=15724800; includeSubDomains</span><br><span class="line"></span><br><span class="line">[root@k8s-master ingress]# curl -Ik http://tomcat.test.com</span><br><span class="line">HTTP/1.1 308 Permanent Redirect</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Fri, 09 Aug 2019 02:58:28 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 177</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Location: https://tomcat.test.com/  #会重定向到https://tomcat.test.com/</span><br><span class="line"></span><br><span class="line">[root@k8s-master ingress]# curl -Ik https://tomcat.test.com/bar</span><br><span class="line">HTTP/1.1 200</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Fri, 09 Aug 2019 02:57:39 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Strict-Transport-Security: max-age=15724800; includeSubDomains</span><br><span class="line"></span><br><span class="line">[root@k8s-master ingress]# curl -Ik https://tomcat.nedy.com</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Fri, 09 Aug 2019 02:47:02 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Strict-Transport-Security: max-age=15724800; includeSubDomains</span><br><span class="line"></span><br><span class="line">[root@k8s-master ingress]# curl -Ik http://tomcat.nedy.com</span><br><span class="line">HTTP/1.1 308 Permanent Redirect</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Fri, 09 Aug 2019 02:47:08 GMT</span><br><span class="line">Content-Type: text/html</span><br><span class="line">Content-Length: 177</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Location: https://tomcat.nedy.com/</span><br><span class="line"></span><br><span class="line">[root@k8s-master ingress]# curl -Ik https://tomcat.nedy.com/bar</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: openresty/1.15.8.1</span><br><span class="line">Date: Fri, 09 Aug 2019 02:47:16 GMT</span><br><span class="line">Content-Type: text/html;charset=UTF-8</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Vary: Accept-Encoding</span><br><span class="line">Strict-Transport-Security: max-age=15724800; includeSubDomains</span><br></pre></td></tr></table></figure><p>这里有个疑惑：没有为<code>tomcat.nedy.com</code>配置证书，但是依然可以通过https访问</p><h2 id="6、IP和域名访问是否为同一服务"><a href="#6、IP和域名访问是否为同一服务" class="headerlink" title="6、IP和域名访问是否为同一服务"></a>6、IP和域名访问是否为同一服务</h2><p>使用上面的例子</p><p>其中myweb使用的tomcat版本是tomcat-8.0，myweb2使用的tomcat版本是tomcat-9.0</p><p>1)</p><ul><li><code>secret-ingress.yaml</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tomcat.test.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">testsecret-tls</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.test.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/bar</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb2</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><ul><li>验证：</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ingress]# curl -k https://tomcat.test.com | grep Tomcat\/ | grep h1</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 11266    0 11266    0     0   184k      0 --:--:-- --:--:-- --:--:--  189k</span><br><span class="line">                &lt;h1&gt;Apache Tomcat/8.0.53&lt;/h1&gt;</span><br><span class="line">[root@k8s-master ingress]# curl -k https://tomcat.test.com/bar | grep Tomcat\/ | grep h1</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 11184    0 11184    0     0   252k      0 --:--:-- --:--:-- --:--:--  260k</span><br><span class="line">                &lt;h1&gt;Apache Tomcat/9.0.22&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>2) </p><ul><li><code>secret-ingress.yaml</code></li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">secret-ingress</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">nginx.ingress.kubernetes.io/rewrite-target:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">tls:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">hosts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tomcat.test.com</span></span><br><span class="line">    <span class="attr">secretName:</span> <span class="string">testsecret-tls</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">tomcat.test.com</span></span><br><span class="line">      <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/bar</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb2</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">http:</span></span><br><span class="line">        <span class="attr">paths:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb2</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/bar</span></span><br><span class="line">          <span class="attr">backend:</span></span><br><span class="line">            <span class="attr">serviceName:</span> <span class="string">myweb</span></span><br><span class="line">            <span class="attr">servicePort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><ul><li>验证</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-master ingress]# curl -k https://tomcat.test.com | grep Tomcat\/ | grep h1</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 11266    0 11266    0     0   188k      0 --:--:-- --:--:-- --:--:--  193k</span><br><span class="line">                &lt;h1&gt;Apache Tomcat/8.0.53&lt;/h1&gt;</span><br><span class="line">[root@k8s-master ingress]# curl -k https://tomcat.test.com/bar | grep Tomcat\/ | grep h1</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 11184    0 11184    0     0   190k      0 --:--:-- --:--:-- --:--:--  191k</span><br><span class="line">                &lt;h1&gt;Apache Tomcat/9.0.22&lt;/h1&gt;</span><br><span class="line">[root@k8s-master ingress]# curl -k https://172.25.21.66 | grep Tomcat\/ | grep h1</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 11184    0 11184    0     0   235k      0 --:--:-- --:--:-- --:--:--  237k</span><br><span class="line">                &lt;h1&gt;Apache Tomcat/9.0.22&lt;/h1&gt;</span><br><span class="line">[root@k8s-master ingress]# curl -k https://172.25.21.66/bar | grep Tomcat\/ | grep h1</span><br><span class="line"><span class="meta">  %</span><span class="bash"> Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100 11266    0 11266    0     0   268k      0 --:--:-- --:--:-- --:--:--  275k</span><br><span class="line">                &lt;h1&gt;Apache Tomcat/8.0.53&lt;/h1&gt;</span><br></pre></td></tr></table></figure><p>结论：相同的IP路径和域名路径可以转发不同的服务，通过相同路径的IP和域名访问的结果不一样，因为对应的服务不同，即IP和域名不对应。</p>]]></content>
      
      
      <categories>
          
          <category> Kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ingress </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
